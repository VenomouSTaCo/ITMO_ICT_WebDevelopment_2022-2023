{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 2022 \u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0438 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u041a\u043e\u043d\u0435\u0432\u0430 \u0410\u043d\u0442\u043e\u043d\u0430 K33402","title":"Home"},{"location":"#web-2022","text":"","title":"Web-\u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 2022"},{"location":"#k33402","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u044b\u0435 \u0438 \u043f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u041a\u043e\u043d\u0435\u0432\u0430 \u0410\u043d\u0442\u043e\u043d\u0430 K33402"},{"location":"lab_1/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161 \u0417\u0430\u0434\u0430\u0447\u0430 \u21161 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. server.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind((\"127.0.0.1\", 8071)) sock.listen(5) client_socket, addr = sock.accept() print(client_socket.recv(1024).decode(\"utf-8\")) client_socket.send(b\"Hello, client\") sock.close() client.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect((\"127.0.0.1\", 8071)) sock.send(b\"Hello, server\") print(sock.recv(1024).decode(\"utf-8\")) sock.close() \u0417\u0430\u0434\u0430\u0447\u0430 \u21162 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0412\u0430\u0440\u0438\u0430\u043d\u0442: b. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f. server.py import math import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind((\"127.0.0.1\", 8091)) sock.listen(10) client_socket, addr = sock.accept() client_socket.send(b\"Hello, client\\nPlease enter the coefficients a, b, c of your equation like ax^2+bx+c=0\") coefs = client_socket.recv(1024).decode(\"utf-8\") ''' https://younglinux.info/python/task/quadratic ''' a = float(coefs[0]) b = float(coefs[2]) c = float(coefs[4]) discr = b ** 2 - 4 * a * c if discr < 0: msg = \"No real roots\" elif discr == 0: x = -b / (2 * a) msg = \"x = %.2f\" % x else: x1 = (-b + math.sqrt(discr)) / (2 * a) x2 = (-b - math.sqrt(discr)) / (2 * a) msg = \"x1 = %.2f \\nx2 = %.2f\" % (x1, x2) client_socket.send(msg.encode(\"utf-8\")) sock.close() client.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect((\"127.0.0.1\", 8091)) print(sock.recv(1024).decode(\"utf-8\")) coefs = input(\"Enter a, b, c divided by space: \").encode(\"utf-8\") sock.send(coefs) print(sock.recv(1024).decode(\"utf-8\")) sock.close() \u0417\u0430\u0434\u0430\u0447\u0430 \u21163 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html. server.py import socket conn = socket.socket(socket.AF_INET, socket.SOCK_STREAM) conn.bind(('127.0.0.1', 8901)) conn.listen(10) while True: try: client_socket, addr = conn.accept() client_socket.recv(1024) response_type = \"HTTP/1.0 200 OK\\n\" headers = \"Content-Type: text/html\\n\\n\" f = open(\"index.html\", \"r\") body = f.read() res = response_type + headers + body client_socket.send(res.encode(\"utf-8\")) f.close() client_socket.close() except KeyboardInterrupt: conn.close() break index.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Main</title> </head> <body> <h1>Hello, client</h1> </body> </html> \u0417\u0430\u0434\u0430\u0447\u0430 \u21164 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432. server.py import socket conn = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) conn.bind(('127.0.0.1', 8902)) clients = [] while True: try: data, client_address = conn.recvfrom(1024) if client_address not in clients: clients.append(client_address) for client in clients: if client != client_address: conn.sendto(data, client) except KeyboardInterrupt: conn.close() break client.py import socket import threading conn = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) conn.connect(('127.0.0.1', 8902)) def messages(): while True: data = conn.recv(2048) print(data.decode(\"utf-8\")) def chat(): name = input(\"Enter your name: \") print(f'{name}, say hello to the chat') conn.sendall(bytes(f\"{name} joined\", \"utf-8\")) while True: conn.sendto(bytes(f\"{name}: {input()}\", \"utf-8\"), ('127.0.0.1', 8902)) thread1, thread2 = threading.Thread(target=messages), threading.Thread(target=chat) thread1.start(), thread2.start() \u0417\u0430\u0434\u0430\u0447\u0430 \u21165 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket. \u0417\u0430\u0434\u0430\u043d\u0438\u0435: \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442: \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u0430\u0445 \u043f\u043e \u0434\u0441\u0438\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0432 \u0432\u0438\u0434\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. server.py import socket import sys class MyHTTPServer: # \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0441\u0435\u0440\u0432\u0435\u0440\u0430 def __init__(self, host, port, name): self._host = host self._port = port self._server_name = name # 1. \u0417\u0430\u043f\u0443\u0441\u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043d\u0430 \u0441\u043e\u043a\u0435\u0442\u0435, \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 def serve_forever(self): serv_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM, proto=0) try: serv_sock.bind((self._host, self._port)) serv_sock.listen() while True: client, addr = serv_sock.accept() self.serve_client(client) finally: serv_sock.close() # 2. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f def serve_client(self, client): try: method, url, version, params, headers = self.parse_request(client) self.handle_request(method, url, headers, client, params) except ConnectionResetError: client = None if client: client.close() # 3. \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 http+\u0437\u0430\u043f\u0440\u043e\u0441\u0430.\u041f\u0435\u0440\u0432\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u043d\u0443\u0436\u043d\u043e \u0440\u0430\u0437\u0431\u0438\u0442\u044c \u043d\u0430 3 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 (\u043c\u0435\u0442\u043e\u0434 + url + \u0432\u0435\u0440\u0441\u0438\u044f \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430). URL \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0430\u0437\u0431\u0438\u0442\u044c \u043d\u0430 \u0430\u0434\u0440\u0435\u0441 \u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b def parse_request(self, client): rfile = client.makefile('rb') method, url, version, params = None, None, None, None for line in rfile: words = line.decode('utf-8', errors='ignore').split() if len(words) != 3: raise Exception('Malformed request line') method, url, version = words # \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0435\u0441\u0442\u044c \u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b if \"?\" in url: url, params = url.split('?') break headers = self.parse_headers(rfile) return method, url, version, params, headers # 4. \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 headers. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432\u0441\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0434\u043e \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0438\u0445 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432. @staticmethod def parse_headers(rfile): headers = [] for line in rfile: if line in (b'\\r\\n', b'\\n', b''): break headers.append(line) return headers # 5. \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 url \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c \u043c\u0435\u0442\u043e\u0434\u043e\u043c. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0434\u0430\u043d\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b, \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u0430\u0431\u043e\u0440 \u0443\u0441\u043b\u043e\u0432\u0438\u0439, # \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 GET \u0438\u043b\u0438 POST \u0437\u0430\u043f\u0440\u043e\u0441. GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435. POST \u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043e\u043b\u0436\u0435\u043d \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432. def handle_request(self, method, url, headers, client, params): if url == \"/\": if method == \"GET\": pass if method == \"POST\" and params is not None: data = params.split('&') discipline.append(data[0].split('=')[1]) mark.append(data[1].split('=')[1]) self.send_response(client) return # 6. \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043e\u0442\u0432\u0435\u0442\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 status line \u0432\u0438\u0434\u0430 HTTP/1.1 <status_code> <reason>. # \u0417\u0430\u0442\u0435\u043c, \u043f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0438 \u043f\u0443\u0441\u0442\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443, \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0449\u0443\u044e \u043a\u043e\u043d\u0435\u0446 \u0441\u0435\u043a\u0446\u0438\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432. @staticmethod def send_response(client): resp = \"HTTP/1.1 200 OK\\n\\n\" with open('index.html', 'r') as f: for line in f: if '<div id=\"on__server\">\\n' == line: for i in range(len(discipline)): resp += '<p id=\"on__server\"> Discipline: ' + discipline[i] + ', Mark: ' + mark[i] + '</p>' resp += line client.send(resp.encode('UTF-8')) if __name__ == '__main__': host = 'localhost' port = 9095 name = 'example' serv = MyHTTPServer(host, port, name) discipline = [] mark = [] try: serv.serve_forever() except KeyboardInterrupt: pass index.hmtl <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Journal</title> <style> body { margin: auto; text-align: center } .input__container { margin-bottom: 20px } </style> </head> <body> <p>Hello, client</p> <form name=\"input__form\" id=\"form\" method=\"post\" accept-charset=\"UTF-8\"> <div class=\"input__container\"> <label for=\"Discipline\"></label><input id=\"Discipline\" class=\"discipline__input\" name=\"Discipline\" required type=\"text\" placeholder=\"Discipline\"> </div> <div class=\"input__container\"> <label for=\"Mark\"></label><input id=\"Mark\" class=\"mark__input\" name=\"Mark\" required type=\"number\" placeholder=\"Mark\" value=\"value\"> </div> <div class=\"button__container\"></div> </form> <div id=\"on__server\"> </div> <script> function submit() { let discipline = document.querySelector('.discipline__input'); let mark = document.querySelector('.mark__input'); fetch(`/?Discipline=${discipline.value}&Mark=${mark.value}`, { method: 'POST' }) } let button = document.createElement('button'); button.onclick = (submit) button.innerHTML = 'Submit' document.querySelector('.button__container').append(button); </script> </body> </html>","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161"},{"location":"lab_1/#no1","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21161"},{"location":"lab_1/#no1_1","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, server\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u043d\u0430 \u0441\u0442\u043e\u0440\u043e\u043d\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. \u0421\u0435\u0440\u0432\u0435\u0440 \u0432 \u043e\u0442\u0432\u0435\u0442 \u043e\u0442\u0441\u044b\u043b\u0430\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u00abHello, client\u00bb. \u0421\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0434\u043e\u043b\u0436\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u044c\u0441\u044f \u0443 \u043a\u043b\u0438\u0435\u043d\u0442\u0430. server.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind((\"127.0.0.1\", 8071)) sock.listen(5) client_socket, addr = sock.accept() print(client_socket.recv(1024).decode(\"utf-8\")) client_socket.send(b\"Hello, client\") sock.close() client.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect((\"127.0.0.1\", 8071)) sock.send(b\"Hello, server\") print(sock.recv(1024).decode(\"utf-8\")) sock.close()","title":"\u0417\u0430\u0434\u0430\u0447\u0430 \u21161"},{"location":"lab_1/#no2","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0443\u044e \u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u0437\u0430\u043f\u0440\u0430\u0448\u0438\u0432\u0430\u0435\u0442 \u0443 \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438, \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0441 \u043a\u043b\u0430\u0432\u0438\u0430\u0442\u0443\u0440\u044b. \u0421\u0435\u0440\u0432\u0435\u0440 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u043d\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u0438 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442 \u043a\u043b\u0438\u0435\u043d\u0442\u0443. \u0412\u0430\u0440\u0438\u0430\u043d\u0442: b. \u0420\u0435\u0448\u0435\u043d\u0438\u0435 \u043a\u0432\u0430\u0434\u0440\u0430\u0442\u043d\u043e\u0433\u043e \u0443\u0440\u0430\u0432\u043d\u0435\u043d\u0438\u044f. server.py import math import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.bind((\"127.0.0.1\", 8091)) sock.listen(10) client_socket, addr = sock.accept() client_socket.send(b\"Hello, client\\nPlease enter the coefficients a, b, c of your equation like ax^2+bx+c=0\") coefs = client_socket.recv(1024).decode(\"utf-8\") ''' https://younglinux.info/python/task/quadratic ''' a = float(coefs[0]) b = float(coefs[2]) c = float(coefs[4]) discr = b ** 2 - 4 * a * c if discr < 0: msg = \"No real roots\" elif discr == 0: x = -b / (2 * a) msg = \"x = %.2f\" % x else: x1 = (-b + math.sqrt(discr)) / (2 * a) x2 = (-b - math.sqrt(discr)) / (2 * a) msg = \"x1 = %.2f \\nx2 = %.2f\" % (x1, x2) client_socket.send(msg.encode(\"utf-8\")) sock.close() client.py import socket sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM) sock.connect((\"127.0.0.1\", 8091)) print(sock.recv(1024).decode(\"utf-8\")) coefs = input(\"Enter a, b, c divided by space: \").encode(\"utf-8\") sock.send(coefs) print(sock.recv(1024).decode(\"utf-8\")) sock.close()","title":"\u0417\u0430\u0434\u0430\u0447\u0430 \u21162"},{"location":"lab_1/#no3","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u0443\u044e \u0447\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u041a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443. \u0412 \u043e\u0442\u0432\u0435\u0442 \u043a\u043b\u0438\u0435\u043d\u0442 \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 http-\u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435, \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0449\u0435\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443, \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u0441\u0435\u0440\u0432\u0435\u0440 \u043f\u043e\u0434\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u0438\u0437 \u0444\u0430\u0439\u043b\u0430 index.html. server.py import socket conn = socket.socket(socket.AF_INET, socket.SOCK_STREAM) conn.bind(('127.0.0.1', 8901)) conn.listen(10) while True: try: client_socket, addr = conn.accept() client_socket.recv(1024) response_type = \"HTTP/1.0 200 OK\\n\" headers = \"Content-Type: text/html\\n\\n\" f = open(\"index.html\", \"r\") body = f.read() res = response_type + headers + body client_socket.send(res.encode(\"utf-8\")) f.close() client_socket.close() except KeyboardInterrupt: conn.close() break index.html <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Main</title> </head> <body> <h1>Hello, client</h1> </body> </html>","title":"\u0417\u0430\u0434\u0430\u0447\u0430 \u21163"},{"location":"lab_1/#no4","text":"\u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0443\u0445\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0438\u043b\u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0439 \u0447\u0430\u0442. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043c\u043d\u043e\u0433\u043e\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0447\u0430\u0441\u0430 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0431\u0430\u043b\u043b\u043e\u0432. server.py import socket conn = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) conn.bind(('127.0.0.1', 8902)) clients = [] while True: try: data, client_address = conn.recvfrom(1024) if client_address not in clients: clients.append(client_address) for client in clients: if client != client_address: conn.sendto(data, client) except KeyboardInterrupt: conn.close() break client.py import socket import threading conn = socket.socket(socket.AF_INET, socket.SOCK_DGRAM) conn.connect(('127.0.0.1', 8902)) def messages(): while True: data = conn.recv(2048) print(data.decode(\"utf-8\")) def chat(): name = input(\"Enter your name: \") print(f'{name}, say hello to the chat') conn.sendall(bytes(f\"{name} joined\", \"utf-8\")) while True: conn.sendto(bytes(f\"{name}: {input()}\", \"utf-8\"), ('127.0.0.1', 8902)) thread1, thread2 = threading.Thread(target=messages), threading.Thread(target=chat) thread1.start(), thread2.start()","title":"\u0417\u0430\u0434\u0430\u0447\u0430 \u21164"},{"location":"lab_1/#no5","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u043f\u0440\u043e\u0441\u0442\u043e\u0439 web-\u0441\u0435\u0440\u0432\u0435\u0440 \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 GET \u0438 POST http \u0437\u0430\u043f\u0440\u043e\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Python \u0438 \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0438 socket. \u0417\u0430\u0434\u0430\u043d\u0438\u0435: \u0441\u0434\u0435\u043b\u0430\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043c\u043e\u0436\u0435\u0442: \u041f\u0440\u0438\u043d\u044f\u0442\u044c \u0438 \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0438 \u043e\u0446\u0435\u043d\u043a\u0435 \u043f\u043e \u0434\u0438\u0441\u0446\u0438\u043f\u043b\u0438\u043d\u0435. \u041e\u0442\u0434\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431\u043e \u0432\u0441\u0435\u0445 \u043e\u0446\u0435\u043d\u0430\u0445 \u043f\u043e \u0434\u0441\u0438\u0446\u0438\u043f\u043b\u0438\u043d\u0435 \u0432 \u0432\u0438\u0434\u0435 html-\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u044b. server.py import socket import sys class MyHTTPServer: # \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u0441\u0435\u0440\u0432\u0435\u0440\u0430 def __init__(self, host, port, name): self._host = host self._port = port self._server_name = name # 1. \u0417\u0430\u043f\u0443\u0441\u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043d\u0430 \u0441\u043e\u043a\u0435\u0442\u0435, \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439 def serve_forever(self): serv_sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM, proto=0) try: serv_sock.bind((self._host, self._port)) serv_sock.listen() while True: client, addr = serv_sock.accept() self.serve_client(client) finally: serv_sock.close() # 2. \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0433\u043e \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f def serve_client(self, client): try: method, url, version, params, headers = self.parse_request(client) self.handle_request(method, url, headers, client, params) except ConnectionResetError: client = None if client: client.close() # 3. \u0444\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0430 http+\u0437\u0430\u043f\u0440\u043e\u0441\u0430.\u041f\u0435\u0440\u0432\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u043d\u0443\u0436\u043d\u043e \u0440\u0430\u0437\u0431\u0438\u0442\u044c \u043d\u0430 3 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u0430 (\u043c\u0435\u0442\u043e\u0434 + url + \u0432\u0435\u0440\u0441\u0438\u044f \u043f\u0440\u043e\u0442\u043e\u043a\u043e\u043b\u0430). URL \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0430\u0437\u0431\u0438\u0442\u044c \u043d\u0430 \u0430\u0434\u0440\u0435\u0441 \u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b def parse_request(self, client): rfile = client.makefile('rb') method, url, version, params = None, None, None, None for line in rfile: words = line.decode('utf-8', errors='ignore').split() if len(words) != 3: raise Exception('Malformed request line') method, url, version = words # \u043f\u0440\u043e\u0432\u0435\u0440\u044f\u0435\u043c, \u0435\u0441\u0442\u044c \u043b\u0438 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b if \"?\" in url: url, params = url.split('?') break headers = self.parse_headers(rfile) return method, url, version, params, headers # 4. \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 headers. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u043e\u0447\u0438\u0442\u0430\u0442\u044c \u0432\u0441\u0435 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u043f\u043e\u0441\u043b\u0435 \u043f\u0435\u0440\u0432\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0434\u043e \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u0443\u0441\u0442\u043e\u0439 \u0441\u0442\u0440\u043e\u043a\u0438 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0438\u0445 \u0432 \u043c\u0430\u0441\u0441\u0438\u0432. @staticmethod def parse_headers(rfile): headers = [] for line in rfile: if line in (b'\\r\\n', b'\\n', b''): break headers.append(line) return headers # 5. \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 url \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043d\u0443\u0436\u043d\u044b\u043c \u043c\u0435\u0442\u043e\u0434\u043e\u043c. \u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0434\u0430\u043d\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u044b, \u043d\u0443\u0436\u043d\u043e \u0431\u0443\u0434\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043d\u0430\u0431\u043e\u0440 \u0443\u0441\u043b\u043e\u0432\u0438\u0439, # \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0431\u0440\u0430\u0431\u0430\u0442\u044b\u0432\u0430\u0435\u0442 GET \u0438\u043b\u0438 POST \u0437\u0430\u043f\u0440\u043e\u0441. GET \u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043e\u043b\u0436\u0435\u043d \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435. POST \u0437\u0430\u043f\u0440\u043e\u0441 \u0434\u043e\u043b\u0436\u0435\u043d \u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0442\u044c \u0434\u0430\u043d\u043d\u044b\u0435 \u043d\u0430 \u043e\u0441\u043d\u043e\u0432\u0435 \u043f\u0435\u0440\u0435\u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432. def handle_request(self, method, url, headers, client, params): if url == \"/\": if method == \"GET\": pass if method == \"POST\" and params is not None: data = params.split('&') discipline.append(data[0].split('=')[1]) mark.append(data[1].split('=')[1]) self.send_response(client) return # 6. \u0424\u0443\u043d\u043a\u0446\u0438\u044f \u0434\u043b\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u043e\u0442\u0432\u0435\u0442\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0432 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0435 status line \u0432\u0438\u0434\u0430 HTTP/1.1 <status_code> <reason>. # \u0417\u0430\u0442\u0435\u043c, \u043f\u043e\u0441\u0442\u0440\u043e\u0447\u043d\u043e \u0437\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u0438 \u0438 \u043f\u0443\u0441\u0442\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443, \u043e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u044e\u0449\u0443\u044e \u043a\u043e\u043d\u0435\u0446 \u0441\u0435\u043a\u0446\u0438\u0438 \u0437\u0430\u0433\u043e\u043b\u043e\u0432\u043a\u043e\u0432. @staticmethod def send_response(client): resp = \"HTTP/1.1 200 OK\\n\\n\" with open('index.html', 'r') as f: for line in f: if '<div id=\"on__server\">\\n' == line: for i in range(len(discipline)): resp += '<p id=\"on__server\"> Discipline: ' + discipline[i] + ', Mark: ' + mark[i] + '</p>' resp += line client.send(resp.encode('UTF-8')) if __name__ == '__main__': host = 'localhost' port = 9095 name = 'example' serv = MyHTTPServer(host, port, name) discipline = [] mark = [] try: serv.serve_forever() except KeyboardInterrupt: pass index.hmtl <!DOCTYPE html> <html lang=\"en\"> <head> <meta charset=\"UTF-8\"> <title>Journal</title> <style> body { margin: auto; text-align: center } .input__container { margin-bottom: 20px } </style> </head> <body> <p>Hello, client</p> <form name=\"input__form\" id=\"form\" method=\"post\" accept-charset=\"UTF-8\"> <div class=\"input__container\"> <label for=\"Discipline\"></label><input id=\"Discipline\" class=\"discipline__input\" name=\"Discipline\" required type=\"text\" placeholder=\"Discipline\"> </div> <div class=\"input__container\"> <label for=\"Mark\"></label><input id=\"Mark\" class=\"mark__input\" name=\"Mark\" required type=\"number\" placeholder=\"Mark\" value=\"value\"> </div> <div class=\"button__container\"></div> </form> <div id=\"on__server\"> </div> <script> function submit() { let discipline = document.querySelector('.discipline__input'); let mark = document.querySelector('.mark__input'); fetch(`/?Discipline=${discipline.value}&Mark=${mark.value}`, { method: 'POST' }) } let button = document.createElement('button'); button.onclick = (submit) button.innerHTML = 'Submit' document.querySelector('.button__container').append(button); </script> </body> </html>","title":"\u0417\u0430\u0434\u0430\u0447\u0430 \u21165"},{"location":"lab_2/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162 \u0417\u0430\u0434\u0430\u043d\u0438\u0435 \u0421\u043f\u0438\u0441\u043e\u043a \u043d\u0430\u0443\u0447\u043d\u044b\u0445 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439 \u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439, \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u0435\u043c\u0430\u0442\u0438\u043a, \u043c\u0435\u0441\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u043f\u0435\u0440\u0438\u043e\u0434 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u0435\u0441\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0443\u0447\u0430\u0441\u0442\u0438\u044f. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u0430\u0432\u0442\u043e\u0440\u043e\u0432 \u0434\u043b\u044f \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0439. \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u044f\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u044b \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u044f (\u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u043d \u043a \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0438\u043b\u0438 \u043d\u0435\u0442) \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django- admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435\u0445 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u044f\u043c. Models models.py from django.db import models from datetime import datetime from users_app.models import User class Conference(models.Model): name = models.TextField() topics = models.TextField(default=None) location = models.TextField(default=None) start_at = models.DateTimeField(default=datetime.now()) end_at = models.DateTimeField(default=datetime.now()) rules = models.TextField(default=None) def __str__(self): return self.name class ConfRegistration(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE) conference = models.ForeignKey(Conference, on_delete=models.CASCADE) text = models.TextField() approved = models.BooleanField(default=False) def __str__(self): return f\"ConfRegistration {self.user} \\\"{self.conference}\\\"\" class ConfComment(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE) conference = models.ForeignKey(Conference, on_delete=models.CASCADE) text = models.TextField() rate = models.IntegerField() def __str__(self): return f\"Comment {self.user} \\\"{self.conference}\\\" text={{ {self.text} }} rate={self.rate} conf_dates={{ {self.conference.start_at} - {self.conference.end_at} }}\" URLs urls.py from django.contrib import admin from django.urls import path from conference_app.views import ConferencesList, ConferenceView, RegistrationsView, RegistrationView from users_app.views import RegisterTemplateView, MyLoginView urlpatterns = [ path(\"admin/\", admin.site.urls), path(\"register/\", RegisterTemplateView.as_view()), path(\"login/\", MyLoginView.as_view(), name='login'), path(\"conferences/\", ConferencesList.as_view()), path(\"conferences/<int:id>\", ConferenceView.as_view()), path(\"registrations/\", RegistrationsView.as_view()), path(\"registration/<int:id>\", RegistrationView.as_view()), ] Forms forms.py from django import forms class RegForm(forms.Form): text = forms.CharField() class ChangeRegForm(forms.Form): new_text = forms.CharField() class DeleteRegForm(forms.Form): is_delete = forms.BooleanField() class AddComment(forms.Form): rate = forms.IntegerField(min_value=1, max_value=10) comment = forms.CharField() Views views.py from typing import Optional from django.contrib.auth.models import AbstractUser from django.core.exceptions import ValidationError from django.http import HttpRequest from django.shortcuts import redirect from django.views.generic import TemplateView from conference_app.forms import * from conference_app.models import * class ConferencesList(TemplateView): template_name = \"conferences.html\" \"\"\" \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \"\"\" def get_context_data(self, **kwargs): return super().get_context_data(conferences=Conference.objects.all(), **kwargs) class ConferenceView(TemplateView): template_name = \"conference.html\" def get_context_data(self, **kwargs): return super().get_context_data(conference=Conference.objects.get(id=kwargs[\"id\"]), regestrations=ConfRegistration.objects.filter(conference_id=kwargs[\"id\"]), comments=ConfComment.objects.filter(conference_id=kwargs['id']), reg_form=RegForm(prefix=\"reg\"), comment_form=AddComment(prefix=\"com\"), **kwargs) \"\"\" \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u0444\u043e\u0440\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0440\u0430\u0441\u043f\u0430\u0440\u0441\u0438\u0442\u044c \u0444\u043e\u0440\u043c \u0434\u0430\u0442\u0443 \"\"\" def post(self, request: HttpRequest, **kwargs): user: Optional[AbstractUser] = request.user form_data = RegForm(request.POST, prefix=\"reg\") if form_data.is_valid(): if user is not None and user.is_authenticated: res = ConfRegistration(user_id=user.pk, conference_id=kwargs[\"id\"], text=form_data.cleaned_data[\"text\"]) res.save() return redirect(\"/registrations/\") form_data = AddComment(request.POST, prefix=\"com\") if not form_data.is_valid(): raise ValidationError(\"\") if user is not None and user.is_authenticated: res = ConfComment(user_id=user.pk, conference_id=kwargs[\"id\"], text=form_data.cleaned_data[\"comment\"], rate=form_data.cleaned_data[\"rate\"]) res.save() return redirect(f\"/conferences/{kwargs['id']}\") class RegistrationsView(TemplateView): template_name = \"registrations.html\" def get_context_data(self, **kwargs): user: Optional[AbstractUser] = self.request.user return super().get_context_data(regestrations=ConfRegistration.objects.filter(user_id=user.id), **kwargs) class RegistrationView(TemplateView): template_name = \"registration.html\" def get_context_data(self, **kwargs): return super().get_context_data(regestration=ConfRegistration.objects.get(id=kwargs['id']), del_form=DeleteRegForm(prefix='del'), ch_form=ChangeRegForm(prefix='ch'), **kwargs) def post(self, request: HttpRequest, **kwargs): user: Optional[AbstractUser] = request.user form_data = DeleteRegForm(request.POST, prefix=\"del\") if form_data.is_valid(): if user is not None and user.is_authenticated and form_data['is_delete']: res = ConfRegistration.objects.get(user_id=user.pk, id=kwargs['id']) res.delete() return redirect(\"/registrations/\") form_data = ChangeRegForm(request.POST, prefix=\"ch\") if not form_data.is_valid(): raise ValidationError(\"\") if user is not None and user.is_authenticated: res = ConfRegistration.objects.get(user_id=user.pk, id=kwargs['id']) res.text = form_data.cleaned_data['new_text'] res.save() return redirect(f\"/registration/{kwargs['id']}\") \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439 Url - register/ \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439 Url - conferences/ \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0430\u0432\u0442\u043e\u0440\u043e\u0432 \u0434\u043b\u044f \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u044f \u0438 \u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f \u0441 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432 Url - conferences/3 , \u0433\u0434\u0435 3 - id \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438 \u041b\u0438\u0441\u0442 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439 \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c Url - registrations/ \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 Url - registration/12 , \u0433\u0434\u0435 12 - id \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u044f \u043a \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162"},{"location":"lab_2/#no2","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21162"},{"location":"lab_2/#_1","text":"","title":"\u0417\u0430\u0434\u0430\u043d\u0438\u0435"},{"location":"lab_2/#_2","text":"\u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439, \u0441\u043f\u0438\u0441\u043e\u043a \u0442\u0435\u043c\u0430\u0442\u0438\u043a, \u043c\u0435\u0441\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u043f\u0435\u0440\u0438\u043e\u0434 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439, \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043c\u0435\u0441\u0442\u043e \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f, \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0443\u0447\u0430\u0441\u0442\u0438\u044f. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0439 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b: \u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439. \u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439 \u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e \u0430\u0432\u0442\u043e\u0440\u043e\u0432 \u0434\u043b\u044f \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u0439. \u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0434\u0430\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u044f \u0441\u0432\u043e\u0438\u0445 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0439. \u041d\u0430\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043e\u0442\u0437\u044b\u0432\u043e\u0432 \u043a \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u044f\u043c. \u041f\u0440\u0438 \u0434\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432, \u0434\u043e\u043b\u0436\u043d\u044b \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u0430\u0442\u044b \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438, \u0442\u0435\u043a\u0441\u0442 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f, \u0440\u0435\u0439\u0442\u0438\u043d\u0433 (1-10), \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u043e \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0442\u043e\u0440\u0435. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u044f \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432 \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u044f (\u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u043e\u0432\u0430\u043d \u043a \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0438\u043b\u0438 \u043d\u0435\u0442) \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Django- admin. \u0412 \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0444\u043e\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0430\u0431\u043b\u0438\u0446\u0430, \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u044e\u0449\u0430\u044f \u0432\u0441\u0435\u0445 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u043f\u043e \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u044f\u043c.","title":"\u0421\u043f\u0438\u0441\u043e\u043a \u043d\u0430\u0443\u0447\u043d\u044b\u0445 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439"},{"location":"lab_2/#models","text":"models.py from django.db import models from datetime import datetime from users_app.models import User class Conference(models.Model): name = models.TextField() topics = models.TextField(default=None) location = models.TextField(default=None) start_at = models.DateTimeField(default=datetime.now()) end_at = models.DateTimeField(default=datetime.now()) rules = models.TextField(default=None) def __str__(self): return self.name class ConfRegistration(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE) conference = models.ForeignKey(Conference, on_delete=models.CASCADE) text = models.TextField() approved = models.BooleanField(default=False) def __str__(self): return f\"ConfRegistration {self.user} \\\"{self.conference}\\\"\" class ConfComment(models.Model): user = models.ForeignKey(User, on_delete=models.CASCADE) conference = models.ForeignKey(Conference, on_delete=models.CASCADE) text = models.TextField() rate = models.IntegerField() def __str__(self): return f\"Comment {self.user} \\\"{self.conference}\\\" text={{ {self.text} }} rate={self.rate} conf_dates={{ {self.conference.start_at} - {self.conference.end_at} }}\"","title":"Models"},{"location":"lab_2/#urls","text":"urls.py from django.contrib import admin from django.urls import path from conference_app.views import ConferencesList, ConferenceView, RegistrationsView, RegistrationView from users_app.views import RegisterTemplateView, MyLoginView urlpatterns = [ path(\"admin/\", admin.site.urls), path(\"register/\", RegisterTemplateView.as_view()), path(\"login/\", MyLoginView.as_view(), name='login'), path(\"conferences/\", ConferencesList.as_view()), path(\"conferences/<int:id>\", ConferenceView.as_view()), path(\"registrations/\", RegistrationsView.as_view()), path(\"registration/<int:id>\", RegistrationView.as_view()), ]","title":"URLs"},{"location":"lab_2/#forms","text":"forms.py from django import forms class RegForm(forms.Form): text = forms.CharField() class ChangeRegForm(forms.Form): new_text = forms.CharField() class DeleteRegForm(forms.Form): is_delete = forms.BooleanField() class AddComment(forms.Form): rate = forms.IntegerField(min_value=1, max_value=10) comment = forms.CharField()","title":"Forms"},{"location":"lab_2/#views","text":"views.py from typing import Optional from django.contrib.auth.models import AbstractUser from django.core.exceptions import ValidationError from django.http import HttpRequest from django.shortcuts import redirect from django.views.generic import TemplateView from conference_app.forms import * from conference_app.models import * class ConferencesList(TemplateView): template_name = \"conferences.html\" \"\"\" \u0414\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u043c \u0432 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0434\u043b\u044f \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0435\u043d\u0438\u044f \"\"\" def get_context_data(self, **kwargs): return super().get_context_data(conferences=Conference.objects.all(), **kwargs) class ConferenceView(TemplateView): template_name = \"conference.html\" def get_context_data(self, **kwargs): return super().get_context_data(conference=Conference.objects.get(id=kwargs[\"id\"]), regestrations=ConfRegistration.objects.filter(conference_id=kwargs[\"id\"]), comments=ConfComment.objects.filter(conference_id=kwargs['id']), reg_form=RegForm(prefix=\"reg\"), comment_form=AddComment(prefix=\"com\"), **kwargs) \"\"\" \u041f\u0440\u0438\u043d\u0438\u043c\u0430\u0435\u043c \u0444\u043e\u0440\u043c \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u0438 \u043f\u044b\u0442\u0430\u0435\u043c\u0441\u044f \u0440\u0430\u0441\u043f\u0430\u0440\u0441\u0438\u0442\u044c \u0444\u043e\u0440\u043c \u0434\u0430\u0442\u0443 \"\"\" def post(self, request: HttpRequest, **kwargs): user: Optional[AbstractUser] = request.user form_data = RegForm(request.POST, prefix=\"reg\") if form_data.is_valid(): if user is not None and user.is_authenticated: res = ConfRegistration(user_id=user.pk, conference_id=kwargs[\"id\"], text=form_data.cleaned_data[\"text\"]) res.save() return redirect(\"/registrations/\") form_data = AddComment(request.POST, prefix=\"com\") if not form_data.is_valid(): raise ValidationError(\"\") if user is not None and user.is_authenticated: res = ConfComment(user_id=user.pk, conference_id=kwargs[\"id\"], text=form_data.cleaned_data[\"comment\"], rate=form_data.cleaned_data[\"rate\"]) res.save() return redirect(f\"/conferences/{kwargs['id']}\") class RegistrationsView(TemplateView): template_name = \"registrations.html\" def get_context_data(self, **kwargs): user: Optional[AbstractUser] = self.request.user return super().get_context_data(regestrations=ConfRegistration.objects.filter(user_id=user.id), **kwargs) class RegistrationView(TemplateView): template_name = \"registration.html\" def get_context_data(self, **kwargs): return super().get_context_data(regestration=ConfRegistration.objects.get(id=kwargs['id']), del_form=DeleteRegForm(prefix='del'), ch_form=ChangeRegForm(prefix='ch'), **kwargs) def post(self, request: HttpRequest, **kwargs): user: Optional[AbstractUser] = request.user form_data = DeleteRegForm(request.POST, prefix=\"del\") if form_data.is_valid(): if user is not None and user.is_authenticated and form_data['is_delete']: res = ConfRegistration.objects.get(user_id=user.pk, id=kwargs['id']) res.delete() return redirect(\"/registrations/\") form_data = ChangeRegForm(request.POST, prefix=\"ch\") if not form_data.is_valid(): raise ValidationError(\"\") if user is not None and user.is_authenticated: res = ConfRegistration.objects.get(user_id=user.pk, id=kwargs['id']) res.text = form_data.cleaned_data['new_text'] res.save() return redirect(f\"/registration/{kwargs['id']}\")","title":"Views"},{"location":"lab_2/#_3","text":"Url - register/","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u043d\u043e\u0432\u044b\u0445 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u0435\u0439"},{"location":"lab_2/#_4","text":"Url - conferences/","title":"\u041f\u0440\u043e\u0441\u043c\u043e\u0442\u0440 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439"},{"location":"lab_2/#_5","text":"Url - conferences/3 , \u0433\u0434\u0435 3 - id \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0438","title":"\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f \u0430\u0432\u0442\u043e\u0440\u043e\u0432 \u0434\u043b\u044f \u0432\u044b\u0441\u0442\u0443\u043f\u043b\u0435\u043d\u0438\u044f \u0438 \u043e\u0441\u0442\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u044f \u0441 \u0442\u0430\u0431\u043b\u0438\u0446\u0435\u0439 \u0443\u0447\u0430\u0441\u0442\u043d\u0438\u043a\u043e\u0432 \u0438 \u043a\u043e\u043c\u043c\u0435\u043d\u0442\u0430\u0440\u0438\u0435\u0432"},{"location":"lab_2/#_6","text":"Url - registrations/","title":"\u041b\u0438\u0441\u0442 \u043a\u043e\u043d\u0444\u0435\u0440\u0435\u043d\u0446\u0438\u0439 \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c"},{"location":"lab_2/#_7","text":"Url - registration/12 , \u0433\u0434\u0435 12 - id \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438"},{"location":"lab_2/#_8","text":"","title":"\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u044f \u043a \u043f\u0443\u0431\u043b\u0438\u043a\u0430\u0446\u0438\u0438 \u0432 \u0430\u0434\u043c\u0438\u043d\u043a\u0435"},{"location":"lab_3/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043d\u0430 django rest. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API. \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0412\u0430\u0440\u0438\u0430\u043d\u0442 1 \u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b. \u0422\u0430\u043a\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u043d\u043e\u043c\u0435\u0440\u0430\u0445, \u043e \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u0445 \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u0445 \u0438 \u043e \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445, \u0443\u0431\u0438\u0440\u0430\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u043d\u043e\u043c\u0435\u0440\u0430\u0445. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0438 \u0438\u043c\u0435\u044e\u0442\u0441\u044f \u043d\u043e\u043c\u0435\u0440\u0430 \u0442\u0440\u0435\u0445 \u0442\u0438\u043f\u043e\u0432: \u043e\u0434\u043d\u043e\u043c\u0435\u0441\u0442\u043d\u044b\u0439, \u0434\u0432\u0443\u0445\u043c\u0435\u0441\u0442\u043d\u044b\u0439 \u0438 \u0442\u0440\u0435\u0445\u043c\u0435\u0441\u0442\u043d\u044b\u0439, \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0449\u0438\u0435\u0441\u044f \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c\u044e \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0432 \u0441\u0443\u0442\u043a\u0438. \u0412 \u043a\u0430\u0436\u0434\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435 \u0435\u0441\u0442\u044c \u0442\u0435\u043b\u0435\u0444\u043e\u043d. \u041e \u043a\u0430\u0436\u0434\u043e\u043c \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u044e\u0449\u0435\u043c \u0434\u043e\u043b\u0436\u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430, \u0444\u0430\u043c\u0438\u043b\u0438\u044f, \u0438\u043c\u044f, \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u043e, \u0433\u043e\u0440\u043e\u0434, \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u043d \u043f\u0440\u0438\u0431\u044b\u043b, \u0434\u0430\u0442\u0430 \u043f\u043e\u0441\u0435\u043b\u0435\u043d\u0438\u044f \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435, \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0447\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440. \u041e \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f: \u0444\u0430\u043c\u0438\u043b\u0438\u044f, \u0438\u043c\u044f, \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u043e, \u0433\u0434\u0435 (\u044d\u0442\u0430\u0436) \u0438 \u043a\u043e\u0433\u0434\u0430 ( \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438) \u043e\u043d \u0443\u0431\u0438\u0440\u0430\u0435\u0442. \u0421\u043b\u0443\u0436\u0430\u0449\u0438\u0439 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b \u0443\u0431\u0438\u0440\u0430\u0435\u0442 \u0432\u0441\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u043d\u0430 \u043e\u0434\u043d\u043e\u043c \u044d\u0442\u0430\u0436\u0435 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0434\u043d\u0438 \u043d\u0435\u0434\u0435\u043b\u0438, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432 \u0440\u0430\u0437\u043d\u044b\u0435 \u0434\u043d\u0438 \u043e\u043d \u043c\u043e\u0436\u0435\u0442 \u0443\u0431\u0438\u0440\u0430\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u044d\u0442\u0430\u0436\u0438. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438: \u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u0445, \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u0432\u0448\u0438\u0445 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435, \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438; \u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432, \u043f\u0440\u0438\u0431\u044b\u0432\u0448\u0438\u0445 \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0433\u043e\u0440\u043e\u0434\u0430, \u043e \u0442\u043e\u043c, \u043a\u0442\u043e \u0438\u0437 \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445 \u0443\u0431\u0438\u0440\u0430\u043b \u043d\u043e\u043c\u0435\u0440 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0445 \u043d\u043e\u043c\u0435\u0440\u043e\u0432; \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043c\u0435\u0441\u0442\u0430 \u0436\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043b\u0438 \u0432 \u0442\u0435 \u0436\u0435 \u0434\u043d\u0438, \u0447\u0442\u043e \u0438 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442, \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438: \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0438\u043b\u0438 \u0443\u0432\u043e\u043b\u0438\u0442\u044c \u0441\u043b\u0443\u0436\u0430\u0449\u0435\u0433\u043e \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b; \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043b\u0443\u0436\u0430\u0449\u0435\u0433\u043e; \u043f\u043e\u0441\u0435\u043b\u0438\u0442\u044c \u0438\u043b\u0438 \u0432\u044b\u0441\u0435\u043b\u0438\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0442\u0430\u043a\u0436\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0432\u044b\u0434\u0430\u0447\u0438 \u043e\u0442\u0447\u0435\u0442\u0430 \u043e \u0440\u0430\u0431\u043e\u0442\u0435 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0433\u043e\u0434\u0430. \u0422\u0430\u043a\u043e\u0439 \u043e\u0442\u0447\u0435\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f: \u0447\u0438\u0441\u043b\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435; \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u043d\u0435 \u043a\u0430\u0436\u0434\u043e\u043c \u044d\u0442\u0430\u0436\u0435; \u043e\u0431\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u0434\u043e\u0445\u043e\u0434\u0430 \u0437\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u043d\u043e\u043c\u0435\u0440; \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u044b\u0439 \u0434\u043e\u0445\u043e\u0434 \u043f\u043e \u0432\u0441\u0435\u0439 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435. \u041c\u043e\u0434\u0435\u043b\u044c \u0411\u0414 Models models.py class Guest(models.Model): first_name = models.TextField() middle_name = models.TextField() last_name = models.TextField() city = models.TextField() passport = models.TextField() class CleaningStaff(models.Model): first_name = models.TextField() middle_name = models.TextField() last_name = models.TextField() class Room(models.Model): ROOM_TYPES = ( (\"SINGLE\", \"Single\"), (\"DOUBLE\", \"Double\"), (\"TRIPLE\", \"Triple\"), ) number = models.TextField(default=\"\") price = models.FloatField() floor = models.IntegerField() phone = models.IntegerField() room_type = models.TextField(choices=ROOM_TYPES) class Booking(models.Model): room = models.ForeignKey(Room, related_name=\"bookings\", on_delete=models.CASCADE) guest = models.ForeignKey(Guest, related_name=\"bookings\", on_delete=models.CASCADE) check_in = models.DateTimeField() check_out = models.DateTimeField() admin = models.ForeignKey(User, related_name=\"bookings\", on_delete=models.CASCADE) class Cleaning(models.Model): WEEK_DAYS = ( (\"SUNDAY\", \"Sunday\"), (\"MONDAY\", \"Monday\"), (\"TUESDAY\", \"Tuesday\"), (\"WEDNESDAY\", \"Wednesday\"), (\"THURSDAY\", \"Thursday\"), (\"FRIDAY\", \"Friday\"), (\"SATURDAY\", \"Saturday\"), ) staff = models.ForeignKey(CleaningStaff, related_name=\"cleaning\", on_delete=models.CASCADE) floor = models.IntegerField() week_day = models.TextField(choices=WEEK_DAYS) Views views.py class AbstractCountView(RetrieveAPIView): serializer_class = CountSerializer def filtered_queryset(self, *args, **kwargs): return self.queryset.filter(**{self.lookup_field: kwargs[self.lookup_field]}) def retrieve(self, request, *args, **kwargs): serializer = self.serializer_class( CountObj(self.filtered_queryset(*args, **kwargs).count()) ) return Response(serializer.data) class LivingClients(ListAPIView): queryset = Booking.objects.all() serializer_class = LivingClientsBookingSerializer def get_queryset(self): return self.queryset.filter( Q( Q(check_out__gte=self.kwargs[\"from_date\"]) | Q(check_out__gte=self.kwargs[\"to_date\"]), check_in__lte=self.kwargs[\"from_date\"] ) | Q( Q(check_out__lte=self.kwargs[\"to_date\"]) | Q(check_out__gte=self.kwargs[\"to_date\"]), check_in__gte=self.kwargs[\"from_date\"] ), room_id=self.kwargs[\"room_id\"] ) class ClientsByCity(AbstractCountView): lookup_field = \"city\" queryset = Guest.objects.all() class GetCleaningStaffByClientAndDay(APIView): serializer_class = StaffByCleaningSerializer def get(self, *args, **kwargs): staff = Cleaning.objects.filter(week_day=kwargs[\"weekday\"], floor__in=Room.objects.filter(bookings__guest=kwargs[\"guest_id\"]).values( \"floor\")) return Response(self.serializer_class(staff, many=True).data) class FreeRoomsCount(AbstractCountView): queryset = Room.objects.all() def filtered_queryset(self): return self.queryset.filter(Q(bookings__check_in__gt=datetime.datetime.now()) | Q(bookings__check_out__lt=datetime.datetime.now()) | Q( bookings__isnull=True)) class GetClientsSamePeriods(APIView): serializer_class = GuestWithBookingSerializer def get(self, *args, **kwargs): result = [] for booking in Guest.objects.get(id=kwargs[\"guest_id\"]).bookings.all(): result += [b.guest for b in Booking.objects.filter( Q( Q(check_out__gte=booking.check_in) | Q(check_out__gte=booking.check_out), check_in__te=booking.check_in ) | Q( Q(check_out__lte=booking.check_out) | Q(check_out__gte=booking.check_out), check_in__lte=booking.check_in ) ).exclude(guest_id=kwargs[\"guest_id\"]) ] return Response(self.serializer_class(result, many=True).data) class QReport(APIView): def get(self, *args, **kwargs): if kwargs[\"q\"] == 1: q_filter = Q(check_in__gte=datetime.date(datetime.date.today().year, 1, 1), check_in__lt=datetime.date(datetime.date.today().year, 3, 31)) elif kwargs[\"q\"] == 2: q_filter = Q(check_in__gte=datetime.date(datetime.date.today().year, 4, 1), check_in__lt=datetime.date(datetime.date.today().year, 6, 31)) elif kwargs[\"q\"] == 3: q_filter = Q(check_in__gte=datetime.date(datetime.date.today().year, 7, 1), check_in__lt=datetime.date(datetime.date.today().year, 9, 31)) elif kwargs[\"q\"] == 4: q_filter = Q(check_in__gte=datetime.date(datetime.date.today().year, 10, 1), check_in__lt=datetime.date(datetime.date.today().year, 12, 31)) floors = [] for f in Room.objects.values(\"floor\").annotate(Count(\"id\")): floors.append({\"floor\": f[\"floor\"], \"count\": f[\"id__count\"]}) rooms = [] for room in Room.objects.all(): days = 0 counter = 0 for booking in room.bookings.filter(q_filter): days += (booking.check_out - booking.check_in).days counter += 1 rooms.append( { \"name\": room.number, \"count\": counter, \"profit\": room.price * days } ) return render( self.request, \"report.html\", {\"rooms\": rooms, \"floors\": floors, \"profit\": sum(r[\"profit\"] for r in rooms)} ) Serializers serializers.py class CountObj: def __init__(self, count): self.count = count class CountSerializer(serializers.Serializer): count = serializers.IntegerField() class GuestSerializer(serializers.ModelSerializer): class Meta: model = Guest fields = (\"first_name\", \"middle_name\", \"last_name\", \"passport\", \"city\") class LivingClientsBookingSerializer(serializers.ModelSerializer): guest = GuestSerializer() class Meta: model = Booking fields = (\"guest\",) class StaffSerializer(serializers.ModelSerializer): class Meta: model = CleaningStaff fields = (\"first_name\", \"middle_name\", \"last_name\") class StaffByCleaningSerializer(serializers.ModelSerializer): staff = StaffSerializer() class Meta: model = Cleaning fields = (\"staff\",) class BookingSerializer(serializers.ModelSerializer): class Meta: model = Booking fields = \"__all__\" class GuestWithBookingSerializer(serializers.ModelSerializer): bookings = BookingSerializer(many=True) class Meta: model = Guest fields = (\"first_name\", \"middle_name\", \"last_name\", \"passport\", \"city\", \"bookings\") URLs urls.py urlpatterns = [ path(\"living_clients/<int:room_id>/<str:from_date>/<str:to_date>\", LivingClients.as_view()), path(\"clients_count_by_city/<str:city>\", ClientsByCity.as_view()), path(\"cleaning_by_client_and_day/<int:guest_id>/<str:weekday>\", GetCleaningStaffByClientAndDay.as_view()), path(\"free_rooms/\", FreeRoomsCount.as_view()), path(\"clients_same_period/<int:guest_id>\", GetClientsSamePeriods.as_view()), path(\"report/<int:q>\", QReport.as_view()) ] API","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163"},{"location":"lab_3/#3-django-rest-api","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 3. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u043d\u0430 django rest. \u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 API."},{"location":"lab_3/#_1","text":"","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab_3/#1","text":"\u0421\u043e\u0437\u0434\u0430\u0442\u044c \u043f\u0440\u043e\u0433\u0440\u0430\u043c\u043c\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443, \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043d\u0443\u044e \u0434\u043b\u044f \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b. \u0422\u0430\u043a\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u0445\u0440\u0430\u043d\u0435\u043d\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u0439 \u043e\u0431 \u0438\u043c\u0435\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u043d\u043e\u043c\u0435\u0440\u0430\u0445, \u043e \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u044e\u0449\u0438\u0445 \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u0445 \u0438 \u043e \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445, \u0443\u0431\u0438\u0440\u0430\u044e\u0449\u0438\u0445\u0441\u044f \u0432 \u043d\u043e\u043c\u0435\u0440\u0430\u0445. \u041a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u043e, \u0438 \u0438\u043c\u0435\u044e\u0442\u0441\u044f \u043d\u043e\u043c\u0435\u0440\u0430 \u0442\u0440\u0435\u0445 \u0442\u0438\u043f\u043e\u0432: \u043e\u0434\u043d\u043e\u043c\u0435\u0441\u0442\u043d\u044b\u0439, \u0434\u0432\u0443\u0445\u043c\u0435\u0441\u0442\u043d\u044b\u0439 \u0438 \u0442\u0440\u0435\u0445\u043c\u0435\u0441\u0442\u043d\u044b\u0439, \u043e\u0442\u043b\u0438\u0447\u0430\u044e\u0449\u0438\u0435\u0441\u044f \u0441\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c\u044e \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u044f \u0432 \u0441\u0443\u0442\u043a\u0438. \u0412 \u043a\u0430\u0436\u0434\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435 \u0435\u0441\u0442\u044c \u0442\u0435\u043b\u0435\u0444\u043e\u043d. \u041e \u043a\u0430\u0436\u0434\u043e\u043c \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u044e\u0449\u0435\u043c \u0434\u043e\u043b\u0436\u043d\u0430 \u0445\u0440\u0430\u043d\u0438\u0442\u044c\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0430\u044f \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f: \u043d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430, \u0444\u0430\u043c\u0438\u043b\u0438\u044f, \u0438\u043c\u044f, \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u043e, \u0433\u043e\u0440\u043e\u0434, \u0438\u0437 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043e\u043d \u043f\u0440\u0438\u0431\u044b\u043b, \u0434\u0430\u0442\u0430 \u043f\u043e\u0441\u0435\u043b\u0435\u043d\u0438\u044f \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435, \u0432\u044b\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0447\u043d\u044b\u0439 \u043d\u043e\u043c\u0435\u0440. \u041e \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0438\u0437\u0432\u0435\u0441\u0442\u043d\u0430 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0433\u043e \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f: \u0444\u0430\u043c\u0438\u043b\u0438\u044f, \u0438\u043c\u044f, \u043e\u0442\u0447\u0435\u0441\u0442\u0432\u043e, \u0433\u0434\u0435 (\u044d\u0442\u0430\u0436) \u0438 \u043a\u043e\u0433\u0434\u0430 ( \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438) \u043e\u043d \u0443\u0431\u0438\u0440\u0430\u0435\u0442. \u0421\u043b\u0443\u0436\u0430\u0449\u0438\u0439 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b \u0443\u0431\u0438\u0440\u0430\u0435\u0442 \u0432\u0441\u0435 \u043d\u043e\u043c\u0435\u0440\u0430 \u043d\u0430 \u043e\u0434\u043d\u043e\u043c \u044d\u0442\u0430\u0436\u0435 \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0435 \u0434\u043d\u0438 \u043d\u0435\u0434\u0435\u043b\u0438, \u043f\u0440\u0438 \u044d\u0442\u043e\u043c \u0432 \u0440\u0430\u0437\u043d\u044b\u0435 \u0434\u043d\u0438 \u043e\u043d \u043c\u043e\u0436\u0435\u0442 \u0443\u0431\u0438\u0440\u0430\u0442\u044c \u0440\u0430\u0437\u043d\u044b\u0435 \u044d\u0442\u0430\u0436\u0438. \u0420\u0430\u0431\u043e\u0442\u0430 \u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u0442 \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0435\u0439 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u0438: \u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430\u0445, \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u0432\u0448\u0438\u0445 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435, \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438; \u043e \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u0435 \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432, \u043f\u0440\u0438\u0431\u044b\u0432\u0448\u0438\u0445 \u0438\u0437 \u0437\u0430\u0434\u0430\u043d\u043d\u043e\u0433\u043e \u0433\u043e\u0440\u043e\u0434\u0430, \u043e \u0442\u043e\u043c, \u043a\u0442\u043e \u0438\u0437 \u0441\u043b\u0443\u0436\u0430\u0449\u0438\u0445 \u0443\u0431\u0438\u0440\u0430\u043b \u043d\u043e\u043c\u0435\u0440 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u043e\u0433\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u0430 \u0432 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u0434\u0435\u043d\u044c \u043d\u0435\u0434\u0435\u043b\u0438, \u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435 \u0441\u0432\u043e\u0431\u043e\u0434\u043d\u044b\u0445 \u043d\u043e\u043c\u0435\u0440\u043e\u0432; \u0441\u043f\u0438\u0441\u043e\u043a \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0441 \u0443\u043a\u0430\u0437\u0430\u043d\u0438\u0435\u043c \u043c\u0435\u0441\u0442\u0430 \u0436\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043b\u0438 \u0432 \u0442\u0435 \u0436\u0435 \u0434\u043d\u0438, \u0447\u0442\u043e \u0438 \u0437\u0430\u0434\u0430\u043d\u043d\u044b\u0439 \u043a\u043b\u0438\u0435\u043d\u0442, \u0432 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432\u0440\u0435\u043c\u0435\u043d\u0438. \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438: \u043f\u0440\u0438\u043d\u044f\u0442\u044c \u043d\u0430 \u0440\u0430\u0431\u043e\u0442\u0443 \u0438\u043b\u0438 \u0443\u0432\u043e\u043b\u0438\u0442\u044c \u0441\u043b\u0443\u0436\u0430\u0449\u0435\u0433\u043e \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b; \u0438\u0437\u043c\u0435\u043d\u0438\u0442\u044c \u0440\u0430\u0441\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u0441\u043b\u0443\u0436\u0430\u0449\u0435\u0433\u043e; \u043f\u043e\u0441\u0435\u043b\u0438\u0442\u044c \u0438\u043b\u0438 \u0432\u044b\u0441\u0435\u043b\u0438\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0430. \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0442\u0430\u043a\u0436\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0430\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0432\u044b\u0434\u0430\u0447\u0438 \u043e\u0442\u0447\u0435\u0442\u0430 \u043e \u0440\u0430\u0431\u043e\u0442\u0435 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u044b \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b \u0442\u0435\u043a\u0443\u0449\u0435\u0433\u043e \u0433\u043e\u0434\u0430. \u0422\u0430\u043a\u043e\u0439 \u043e\u0442\u0447\u0435\u0442 \u0434\u043e\u043b\u0436\u0435\u043d \u0441\u043e\u0434\u0435\u0440\u0436\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0441\u0432\u0435\u0434\u0435\u043d\u0438\u044f: \u0447\u0438\u0441\u043b\u043e \u043a\u043b\u0438\u0435\u043d\u0442\u043e\u0432 \u0437\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u0440\u0438\u043e\u0434 \u0432 \u043a\u0430\u0436\u0434\u043e\u043c \u043d\u043e\u043c\u0435\u0440\u0435; \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043d\u043e\u043c\u0435\u0440\u043e\u0432 \u043d\u0435 \u043a\u0430\u0436\u0434\u043e\u043c \u044d\u0442\u0430\u0436\u0435; \u043e\u0431\u0449\u0430\u044f \u0441\u0443\u043c\u043c\u0430 \u0434\u043e\u0445\u043e\u0434\u0430 \u0437\u0430 \u043a\u0430\u0436\u0434\u044b\u0439 \u043d\u043e\u043c\u0435\u0440; \u0441\u0443\u043c\u043c\u0430\u0440\u043d\u044b\u0439 \u0434\u043e\u0445\u043e\u0434 \u043f\u043e \u0432\u0441\u0435\u0439 \u0433\u043e\u0441\u0442\u0438\u043d\u0438\u0446\u0435.","title":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 1"},{"location":"lab_3/#_2","text":"","title":"\u041c\u043e\u0434\u0435\u043b\u044c \u0411\u0414"},{"location":"lab_3/#models","text":"models.py class Guest(models.Model): first_name = models.TextField() middle_name = models.TextField() last_name = models.TextField() city = models.TextField() passport = models.TextField() class CleaningStaff(models.Model): first_name = models.TextField() middle_name = models.TextField() last_name = models.TextField() class Room(models.Model): ROOM_TYPES = ( (\"SINGLE\", \"Single\"), (\"DOUBLE\", \"Double\"), (\"TRIPLE\", \"Triple\"), ) number = models.TextField(default=\"\") price = models.FloatField() floor = models.IntegerField() phone = models.IntegerField() room_type = models.TextField(choices=ROOM_TYPES) class Booking(models.Model): room = models.ForeignKey(Room, related_name=\"bookings\", on_delete=models.CASCADE) guest = models.ForeignKey(Guest, related_name=\"bookings\", on_delete=models.CASCADE) check_in = models.DateTimeField() check_out = models.DateTimeField() admin = models.ForeignKey(User, related_name=\"bookings\", on_delete=models.CASCADE) class Cleaning(models.Model): WEEK_DAYS = ( (\"SUNDAY\", \"Sunday\"), (\"MONDAY\", \"Monday\"), (\"TUESDAY\", \"Tuesday\"), (\"WEDNESDAY\", \"Wednesday\"), (\"THURSDAY\", \"Thursday\"), (\"FRIDAY\", \"Friday\"), (\"SATURDAY\", \"Saturday\"), ) staff = models.ForeignKey(CleaningStaff, related_name=\"cleaning\", on_delete=models.CASCADE) floor = models.IntegerField() week_day = models.TextField(choices=WEEK_DAYS)","title":"Models"},{"location":"lab_3/#views","text":"views.py class AbstractCountView(RetrieveAPIView): serializer_class = CountSerializer def filtered_queryset(self, *args, **kwargs): return self.queryset.filter(**{self.lookup_field: kwargs[self.lookup_field]}) def retrieve(self, request, *args, **kwargs): serializer = self.serializer_class( CountObj(self.filtered_queryset(*args, **kwargs).count()) ) return Response(serializer.data) class LivingClients(ListAPIView): queryset = Booking.objects.all() serializer_class = LivingClientsBookingSerializer def get_queryset(self): return self.queryset.filter( Q( Q(check_out__gte=self.kwargs[\"from_date\"]) | Q(check_out__gte=self.kwargs[\"to_date\"]), check_in__lte=self.kwargs[\"from_date\"] ) | Q( Q(check_out__lte=self.kwargs[\"to_date\"]) | Q(check_out__gte=self.kwargs[\"to_date\"]), check_in__gte=self.kwargs[\"from_date\"] ), room_id=self.kwargs[\"room_id\"] ) class ClientsByCity(AbstractCountView): lookup_field = \"city\" queryset = Guest.objects.all() class GetCleaningStaffByClientAndDay(APIView): serializer_class = StaffByCleaningSerializer def get(self, *args, **kwargs): staff = Cleaning.objects.filter(week_day=kwargs[\"weekday\"], floor__in=Room.objects.filter(bookings__guest=kwargs[\"guest_id\"]).values( \"floor\")) return Response(self.serializer_class(staff, many=True).data) class FreeRoomsCount(AbstractCountView): queryset = Room.objects.all() def filtered_queryset(self): return self.queryset.filter(Q(bookings__check_in__gt=datetime.datetime.now()) | Q(bookings__check_out__lt=datetime.datetime.now()) | Q( bookings__isnull=True)) class GetClientsSamePeriods(APIView): serializer_class = GuestWithBookingSerializer def get(self, *args, **kwargs): result = [] for booking in Guest.objects.get(id=kwargs[\"guest_id\"]).bookings.all(): result += [b.guest for b in Booking.objects.filter( Q( Q(check_out__gte=booking.check_in) | Q(check_out__gte=booking.check_out), check_in__te=booking.check_in ) | Q( Q(check_out__lte=booking.check_out) | Q(check_out__gte=booking.check_out), check_in__lte=booking.check_in ) ).exclude(guest_id=kwargs[\"guest_id\"]) ] return Response(self.serializer_class(result, many=True).data) class QReport(APIView): def get(self, *args, **kwargs): if kwargs[\"q\"] == 1: q_filter = Q(check_in__gte=datetime.date(datetime.date.today().year, 1, 1), check_in__lt=datetime.date(datetime.date.today().year, 3, 31)) elif kwargs[\"q\"] == 2: q_filter = Q(check_in__gte=datetime.date(datetime.date.today().year, 4, 1), check_in__lt=datetime.date(datetime.date.today().year, 6, 31)) elif kwargs[\"q\"] == 3: q_filter = Q(check_in__gte=datetime.date(datetime.date.today().year, 7, 1), check_in__lt=datetime.date(datetime.date.today().year, 9, 31)) elif kwargs[\"q\"] == 4: q_filter = Q(check_in__gte=datetime.date(datetime.date.today().year, 10, 1), check_in__lt=datetime.date(datetime.date.today().year, 12, 31)) floors = [] for f in Room.objects.values(\"floor\").annotate(Count(\"id\")): floors.append({\"floor\": f[\"floor\"], \"count\": f[\"id__count\"]}) rooms = [] for room in Room.objects.all(): days = 0 counter = 0 for booking in room.bookings.filter(q_filter): days += (booking.check_out - booking.check_in).days counter += 1 rooms.append( { \"name\": room.number, \"count\": counter, \"profit\": room.price * days } ) return render( self.request, \"report.html\", {\"rooms\": rooms, \"floors\": floors, \"profit\": sum(r[\"profit\"] for r in rooms)} )","title":"Views"},{"location":"lab_3/#serializers","text":"serializers.py class CountObj: def __init__(self, count): self.count = count class CountSerializer(serializers.Serializer): count = serializers.IntegerField() class GuestSerializer(serializers.ModelSerializer): class Meta: model = Guest fields = (\"first_name\", \"middle_name\", \"last_name\", \"passport\", \"city\") class LivingClientsBookingSerializer(serializers.ModelSerializer): guest = GuestSerializer() class Meta: model = Booking fields = (\"guest\",) class StaffSerializer(serializers.ModelSerializer): class Meta: model = CleaningStaff fields = (\"first_name\", \"middle_name\", \"last_name\") class StaffByCleaningSerializer(serializers.ModelSerializer): staff = StaffSerializer() class Meta: model = Cleaning fields = (\"staff\",) class BookingSerializer(serializers.ModelSerializer): class Meta: model = Booking fields = \"__all__\" class GuestWithBookingSerializer(serializers.ModelSerializer): bookings = BookingSerializer(many=True) class Meta: model = Guest fields = (\"first_name\", \"middle_name\", \"last_name\", \"passport\", \"city\", \"bookings\")","title":"Serializers"},{"location":"lab_3/#urls","text":"urls.py urlpatterns = [ path(\"living_clients/<int:room_id>/<str:from_date>/<str:to_date>\", LivingClients.as_view()), path(\"clients_count_by_city/<str:city>\", ClientsByCity.as_view()), path(\"cleaning_by_client_and_day/<int:guest_id>/<str:weekday>\", GetCleaningStaffByClientAndDay.as_view()), path(\"free_rooms/\", FreeRoomsCount.as_view()), path(\"clients_same_period/<int:guest_id>\", GetClientsSamePeriods.as_view()), path(\"report/<int:q>\", QReport.as_view()) ]","title":"URLs"},{"location":"lab_3/#api","text":"","title":"API"},{"location":"lab_4/","text":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 4. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Vue.js. \u0412\u0430\u0440\u0438\u0430\u043d\u0442 1: \u0441\u0430\u0439\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 \u043e\u0442\u0435\u043b\u044f \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b \u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438, \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0432 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u21163 CORS (Cross-origin resource sharing) \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u043e\u0439 4.3 \u0423\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0441 \u043e\u0434\u043d\u0438\u043c \u0438\u0437 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0448\u0435\u0439 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u044c\u044e \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0443\u0447\u0451\u0442\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e (\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0438\u0437 \u043f\u0443\u043d\u043a\u0442\u0430 4) \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c vuetify \u0438\u043b\u0438 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0443\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 MkDocs. \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u0441 \u043a\u043e\u0434\u043e\u043c App.vue <script setup> import {RouterLink, RouterView} from 'vue-router' import BaseLayout from \"@/layouts/BaseLayout.vue\"; </script> <template> <BaseLayout> <RouterView/> </BaseLayout> </template> <style scoped> </style> main.js import {createApp} from 'vue' import icons from '@/components/icons' import App from '@/App.vue' import router from '@/router' import store from \"@/stores\"; import components from '@/components/my-components' import './assets/main.css' import 'bootstrap' import 'bootstrap/dist/css/bootstrap.min.css' import '@fortawesome/fontawesome-svg-core' import '@fortawesome/vue-fontawesome' import {FontAwesomeIcon} from \"@fortawesome/vue-fontawesome\"; import {library} from \"@fortawesome/fontawesome-svg-core\"; const app = createApp(App) components.forEach(component => { app.component(component.name, component) }) icons.forEach(icon => { library.add(icon) }) app.component('font-awesome-icon', FontAwesomeIcon) app.use(store) app.use(router) app.mount('#app') API instance.js import axios from \"axios\"; const apiURL = 'http://localhost:8000' const instance = axios.create({ baseURL: apiURL }) export default instance index.js import instance from \"@/api/instance.js\"; import RoomAPI from \"@/api/rooms\"; import UsersAPI from \"@/api/users\"; import GuestsAPI from \"@/api/guests\"; const roomAPI = new RoomAPI(instance); const userAPI = new UsersAPI(instance); const guestsAPI = new GuestsAPI(instance); export { roomAPI, userAPI, guestsAPI } users.js class UsersAPI { constructor(instance) { this.API = instance } createNewUser = async (data) => { return this.API({ method: 'POST', url: '/auth/users/', data, headers: { 'Content-Type': 'application/json' } }) } login = async (data) => { return this.API({ method: 'POST', url: '/auth/token/login/', data, headers: { 'Content-Type': 'application/json' } }) } logout = async (token) => { return this.API({ method: 'POST', url: '/auth/token/logout/', headers: { 'Authorization': `Token ${token}` } }) } fetchCurrentUserInfo = async (token) => { return this.API({ url: '/auth/users/me/', headers: { 'Authorization': `Token ${token}` } }) } getAdminById = async (id, token) => { return this.API({ url: `/auth/users/${id}/`, headers: { 'Authorization': `Token ${token}` } }) } } export default UsersAPI guests.js class GuestsAPI { constructor(instance) { this.API = instance } getAllGuests = async () => { return this.API({ url: '/hotels/guests' }) } getGuestById = async (id) => { return this.API({ url: `/hotels/guests/${id}` }) } addBooking = async (data, token) => { return this.API({ method: 'POST', url: '/hotels/booking', data, headers: { 'Content-Type': 'application/json', 'Authorization': `Token ${token}` } }) } closeBooking = async (id) => { return this.API({ method: 'POST', url: `/hotels/check_out_booking/${id}` }) } } export default GuestsAPI Stores index.js import { persist } from 'pinia-persists' import { createPinia } from 'pinia' const pinia = createPinia() pinia.use(persist()) export default pinia rooms.js import {defineStore} from \"pinia\"; import {roomAPI} from \"@/api\"; const useRoomsStore = defineStore('rooms', { state: () => ({ rooms: [] }), actions: { async loadAllRooms() { const response = await roomAPI.getRooms(); this.rooms = response.data; return response.data }, async loadFreeRooms() { const response = await roomAPI.getFreeRooms(); return response.data }, } }) export default useRoomsStore users.js import {defineStore} from \"pinia\"; import {userAPI} from \"@/api\"; const useUsersStore = defineStore('users', { state: () => ({ user: {}, token: null, }), actions: { async signUp(user) { const response = await userAPI.createNewUser(user); return response.data; }, async onLogin(credentials) { const response = await userAPI.login(credentials) this.user = {username: credentials.username, password: credentials.password} this.token = response.data.auth_token return response }, async fetchUser() { if (this.token) { const response = await userAPI.fetchCurrentUserInfo(this.token) return response.data } }, async onLogout() { if (this.token) { const response = await userAPI.logout(this.token) this.token = null; this.user = {} return response.data } }, async getAdmin(id) { if (this.token) { const response = await userAPI.getAdminById(id, this.token) return response.data } } } }) export default useUsersStore Router index.js import {createRouter, createWebHistory} from 'vue-router' import AllRoomsView from \"@/views/AllRoomsView.vue\"; import RoomView from \"@/views/RoomView.vue\"; import AllGuestsView from \"@/views/AllGuestsView.vue\"; import ReportView from \"@/views/ReportView.vue\"; import GuestView from \"@/views/GuestView.vue\"; const router = createRouter({ history: createWebHistory(import.meta.env.BASE_URL), routes: [ { path: '/', name: 'rooms', component: AllRoomsView }, { path: '/room/:id', name: 'room', props: true, component: RoomView }, { path: '/guests', name: 'guests', component: AllGuestsView }, { path: '/guest/:id', name: 'guest', props: true, component: GuestView }, { path: '/report', name: 'report', component: ReportView }, ] }) export default router Components Header.vue <template> <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\"> <div class=\"container-fluid\"> <div class=\"collapse navbar-collapse\" id=\"mynavbar\"> <ul class=\"navbar-nav me-auto\"> <li class=\"nav-item\"> <RouterLink class=\"nav-link\" to=\"/\">\u041a\u043e\u043c\u043d\u0430\u0442\u044b</RouterLink> </li> <li class=\"nav-item\"> <RouterLink class=\"nav-link\" to=\"/guests\">\u0413\u043e\u0441\u0442\u0438</RouterLink> </li> <li class=\"nav-item\"> <RouterLink class=\"nav-link\" to=\"/report\">\u041e\u0442\u0447\u0435\u0442</RouterLink> </li> </ul> <button class=\"btn btn-warning\" type=\"button\" @click=\"showModal=true\" v-if=\"!token\">\u0412\u043e\u0439\u0442\u0438</button> <div class=\"logged d-flex align-items-center\" v-if=\"token\"> <p class=\"username me-4 p-2 m-0\">{{ user.username }}</p> <button class=\"btn btn-danger\" @click=\"logout\">\u0412\u044b\u0439\u0442\u0438</button> </div> </div> </div> </nav> <Login v-show=\"showModal\" @close-modal=\"showModal = false\" @show-register=\"[showModal=false, showRegister=true]\"/> <Register v-show=\"showRegister\" @close-register=\"showRegister=false\" @show-modal=\"[showRegister=false, showModal=true]\"/> </template> <script> import Login from \"@/components/modal/Login.vue\"; import Register from \"@/components/modal/Register.vue\"; import {mapActions, mapState} from \"pinia\"; import useUsersStore from \"@/stores/users\"; export default { name: 'Header', components: { Login, Register }, data() { return { showModal: false, showRegister: false, } }, methods: { ...mapActions(useUsersStore, [\"onLogout\"]), async logout() { if (confirm(\"\u0412\u044b \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u044b\u0439\u0442\u0438?\")) { await this.onLogout() window.location.reload() } } }, computed: { ...mapState(useUsersStore, [\"user\"]), ...mapState(useUsersStore, ['token']) } } </script> <style> .username { color: white; } </style> Report.vue <template> <div class=\"report-wrapper d-flex justify-content-start mt-4 p-4\"> <div class=\"report-header\"> <h3>\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043a\u0432\u0430\u0440\u0442\u0430\u043b</h3> <form type=\"submit\" class=\"mt-4\" @submit.prevent=\"generateReport\"> <input type=\"radio\" name=\"quarter\" :value=\"1\" v-model=\"selectedValue\"> <label>1-\u0439 (\u042f\u043d\u0432\u0430\u0440\u044c-\u041c\u0430\u0440\u0442)</label> <br> <input type=\"radio\" name=\"quarter\" :value=\"2\" v-model=\"selectedValue\"> <label>2-\u0439 (\u0410\u043f\u0440\u0435\u043b\u044c-\u0418\u044e\u043d\u044c)</label> <br> <input type=\"radio\" name=\"quarter\" :value=\"3\" v-model=\"selectedValue\"> <label>3-\u0439 (\u0418\u044e\u043b\u044c-\u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c)</label> <br> <input type=\"radio\" name=\"quarter\" :value=\"4\" v-model=\"selectedValue\"> <label>4-\u0439 (\u041e\u043a\u0442\u0440\u044f\u0431\u0440\u044c-\u0414\u0435\u043a\u0430\u0431\u0440\u044c)</label> <br> <button class=\"btn btn-success mt-3\" type=\"submit\">\u0421\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c</button> </form> </div> <div class=\"report-body\" v-if=\"report\"> <h3>\u041e\u0442\u0447\u0435\u0442 \u0437\u0430 {{ selectedValue }}-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b</h3> <h4>\u041a\u043e\u043c\u043d\u0430\u0442\u044b:</h4> <table> <tr class=\"\"> <th scope=\"col\" width=\"25%\">\u041d\u043e\u043c\u0435\u0440</th> <th scope=\"col\" width=\"50%\">\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</th> <th scope=\"col\" width=\"25%\">\u041f\u0440\u043e\u0444\u0438\u0442</th> </tr> <tr v-for=\"room in report.rooms\"> <td>{{ room.number }}</td> <td>{{ room.count }}</td> <td>\u20bd {{ room.profit }}</td> </tr> </table> <h4>\u042d\u0442\u0430\u0436\u0438:</h4> <table> <tr class=\"\"> <th scope=\"col\" width=\"50%\">\u042d\u0442\u0430\u0436</th> <th scope=\"col\" width=\"50%\">\u041a\u043e\u043b-\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442</th> </tr> <tr v-for=\"floor in report.floors\"> <td>{{ floor.floor }}</td> <td>{{ floor.count }}</td> </tr> </table> <h4> \u041e\u0431\u0449\u0438\u0439 \u043f\u0440\u043e\u0444\u0438\u0442: </h4> <h5>\u20bd {{ report.profit }}</h5> </div> </div> </template> <script> import axios from \"axios\"; export default { name: 'report', data() { return { selectedValue: null, report: null } }, methods: { async generateReport() { if (this.selectedValue < 2) { this.report = (await axios.get(`http://localhost:8000/hotels/report/${this.selectedValue}`)).data } else { this.report = null alert('\u041f\u043e\u043a\u0430 \u043e\u0442\u0447\u0435\u0442 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d') } } }, } </script> <style scoped> .report-header { margin-right: 300px; } input { margin-bottom: 20px; margin-right: 10px; } h4 { margin-top: 30px; } </style> Rooms.vue <template> <div class=\"content \"> <div class=\"mb-2 d-flex justify-content-between align-items-center\"> <div class=\"position-relative\"> <custom-input v-model=\"searchQuery\" @send-search=\"findRoom\"></custom-input> </div> <div class=\"px-2\"> <select-list style=\"width: 120px\" class=\"mx-5 border-0\" v-model=\"sortName\" :options=\"sortOptions\" > </select-list> <filters-list style=\"width: 100px\" class=\" border-0\" v-model=\"filterName\" :options=\"filterOptions\" > </filters-list> </div> </div> <div class=\"table-responsive\"> <table class=\"table table-responsive table-borderless\"> <thead> <tr class=\"bg-light\"> <th scope=\"col\" width=\"10%\">\u2116 \u043a\u043e\u043c\u043d\u0430\u0442\u044b</th> <th scope=\"col\" width=\"15%\">\u042d\u0442\u0430\u0436</th> <th scope=\"col\" width=\"15%\">\u0422\u0438\u043f</th> <th scope=\"col\" width=\"20%\">\u0422\u0435\u043b\u0435\u0444\u043e\u043d</th> <th scope=\"col\" class=\"text-start\" width=\"15%\"><span>\u0426\u0435\u043d\u0430/\u0434\u0435\u043d\u044c</span></th> <th scope=\"col\" width=\"20%\">\u0421\u0442\u0430\u0442\u0443\u0441</th> <th scope=\"col\" class=\"text-end\" width=\"15%\">\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435...</th> </tr> </thead> <tbody v-for=\"room in rooms\"> <tr class=\"\"> <td>{{ room.number }}</td> <td>{{ room.floor }}</td> <td>{{ room.room_type }}</td> <td>{{ room.phone }}</td> <td class=\"text-start\"><span class=\"fw-bolder\">\u20bd {{ parseFloat(room.price).toFixed(2) }}</span></td> <td class=\"fw-bold\" :class=\"[room.is_free ? 'text-success' : 'text-danger']\"> {{ room.is_free ? '\u0421\u0432\u043e\u0431\u043e\u0434\u043d\u043e' : '\u0417\u0430\u043d\u044f\u0442\u043e' }} </td> <td class=\"text-end\"> <button class=\"btn btn-info\" @click=\"openRoom(room.id)\">\u0414\u0435\u0442\u0430\u043b\u0438</button> </td> </tr> </tbody> </table> </div> </div> </template> <script> import {mapActions} from \"pinia\"; import useRoomsStore from \"@/stores/rooms\"; import useUsersStore from \"@/stores/users\"; import FiltersList from \"@/components/my-components/FiltersList.vue\"; import Guest from \"@/components/modal/newGuest.vue\"; export default { name: 'Rooms', components: {Guest}, data() { return { rooms: [], searchQuery: '', sortName: '', filterName: '', filterOptions: [ {value: 'ANY', name: '\u041b\u044e\u0431\u043e\u0439'}, {value: 'TRIPLE', name: 'TRIPLE'}, {value: 'DOUBLE', name: 'DOUBLE'}, {value: 'SINGLE', name: 'SINGLE'}, ], sortOptions: [ {value: 'default', name: 'Default'}, {value: 'number ASC', name: '\u041f\u043e \u043d\u043e\u043c\u0435\u0440\u0443 (ASC)'}, {value: 'number DESC', name: '\u041f\u043e \u043d\u043e\u043c\u0435\u0440\u0443 (DESC)'}, {value: 'floor ASC', name: '\u041f\u043e \u044d\u0442\u0430\u0436\u0443 (ASC)'}, {value: 'floor DESC', name: '\u041f\u043e \u044d\u0442\u0430\u0436\u0443 (DESC)'}, {value: 'price ASC', name: '\u041f\u043e \u0446\u0435\u043d\u0435 (ASC)'}, {value: 'price DESC', name: '\u041f\u043e \u0446\u0435\u043d\u0435 (DESC)'}, ], } }, methods: { ...mapActions(useRoomsStore, ['loadAllRooms']), ...mapActions(useUsersStore, ['fetchUser']), async getRooms() { this.rooms = await this.loadAllRooms(); // console.log(this.rooms) }, openRoom(roomId) { this.$router.push({name: 'room', params: {id: roomId}}) }, async findRoom() { if (this.searchQuery == '') { this.rooms = await this.loadAllRooms(); } else { this.rooms = this.rooms.filter(room => room.number.includes(this.searchQuery)) } }, }, mounted() { this.getRooms() this.fetchUser() }, watch: { async sortName(sortName) { if (sortName == 'default') { this.rooms = await this.loadAllRooms() } else { const sortSplit = sortName.split(' ') const type = sortSplit[0] const order = sortSplit[1] this.rooms.sort((a, b) => a[type] - b[type]) if (order === 'DESC') { this.rooms.reverse() } } }, async filterName(filterName) { this.rooms = await this.loadAllRooms() if (filterName !== 'ANY') { this.rooms = this.rooms.filter(room => room.room_type == filterName) } else { this.rooms = await this.loadAllRooms() } }, } } </script> <style scoped> .content { margin-top: 20px; padding: 30px; } .dropdown-input label { display: block; padding: 3px 20px 0 20px; clear: both; font-weight: 400; line-height: 1.42857143; color: #333; white-space: nowrap; } </style> Room.vue <template> <div class=\"room-wrapper mt-4 p-3\"> <h1>\u041a\u043e\u043c\u043d\u0430\u0442\u0430 \u2116 {{ room.number }} </h1> <div class=\"d-flex justify-content-between mt-4 status-wrapper\"> <h3 class=\"fw-bold\">\u0421\u0442\u0430\u0442\u0443\u0441: <span :class=\"[room.is_free ? 'text-success' : 'text-danger']\">{{ room.is_free ? '\u0421\u0432\u043e\u0431\u043e\u0434\u043d\u043e' : '\u0417\u0430\u043d\u044f\u0442\u043e' }}</span> </h3> <button v-if=\"room.is_free\" class=\"btn btn-toggle btn-primary\" @click=\"isVisible = true\" :class=\"[room.is_free ? 'btn-primary' : 'btn-danger']\"> {{ '\u0417\u0430\u0441\u0435\u043b\u0438\u0442\u044c' }} </button> <button v-if=\"!room.is_free\" class=\"btn btn-toggle btn-danger\" @click=\"checkOut\"> {{ '\u0412\u044b\u0441\u0435\u043b\u0438\u0442\u044c' }} </button> </div> <div class=\"room-body mt-3\"> <p>\u0422\u0438\u043f: <strong>{{ room.room_type }}</strong></p> <p>\u042d\u0442\u0430\u0436: <strong>{{ room.floor }}</strong></p> <p>\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430: <strong>{{ room.phone }}</strong></p> <p class=\"mb-5\">\u0426\u0435\u043d\u0430/\u0434\u0435\u043d\u044c: <strong>\u20bd {{ parseFloat(room.price).toFixed(2) }}</strong></p> <h3>\u0418\u0441\u0442\u043e\u0440\u0438\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439</h3> <div class=\"history-wrapper mb-5\"> <div v-for=\"booking in room.bookings\" class=\"mb-4\"> <h5>{{ booking.guest.last_name }} {{ booking.guest.first_name }} {{ booking.guest.middle_name }}</h5> <p> <span><b>\u041d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430:</b> {{ booking.guest.passport }}</span><br> <span><b>\u0413\u043e\u0440\u043e\u0434:</b> {{ booking.guest.city }}</span><br> <span><b>\u0414\u0430\u0442\u0430 \u0437\u0430\u0435\u0437\u0434\u0430:</b> {{ dateParser(booking.check_in) }}</span><br> <span><b>\u0414\u0430\u0442\u0430 \u0432\u044b\u0435\u0437\u0434\u0430:</b> {{ dateParser(booking.check_out) }}</span> </p> </div> </div> <button class=\"btn btn-secondary\" @click=\"getBack\">\u041d\u0430\u0437\u0430\u0434</button> </div> </div> <CheckIn v-show=\"isVisible\" @close-modal=\"isVisible = false\" :room=\"[room.id, JSON.parse(JSON.stringify(free_time))]\"/> </template> <script> import {mapActions, mapState} from \"pinia\"; import useRoomsStore from \"@/stores/rooms\"; import CheckIn from \"@/components/modal/CheckIn.vue\"; import useGuestsStore from \"@/stores/guests\"; export default { components: { CheckIn }, props: { id: String }, data() { return { room: {}, isVisible: false, free_time: null } }, methods: { ...mapActions(useRoomsStore, ['loadAllRooms', \"loadFreeRooms\"]), ...mapActions(useGuestsStore, ['getGuestsList', \"sendClosed\"]), async getSelectedRoom() { const rooms = await this.loadAllRooms() for (let i = 0; i < rooms.length; i++) { if (rooms[i].id === parseInt(this.id)) { this.room = rooms[i] break } } }, async getFreeRange() { let free = await this.loadFreeRooms() free = free.filter(room => room.id == this.id) this.free_time = free[0].free_time[0] }, dateParser(string) { let date = new Date(string) return date.toUTCString() }, getBack() { this.$router.push('/') }, async checkOut() { if (confirm('\u0412\u044b \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u044b\u0441\u0435\u043b\u0438\u0442\u044c \u0433\u043e\u0441\u0442\u044f?')) { await this.sendClosed(this.room.curr_booking) window.location.reload() } // } }, mounted() { this.getSelectedRoom() this.getFreeRange() } } </script> <style scoped> p { padding: 0; margin: 0 0 10px; } .history-wrapper { margin-top: 30px; height: 200px; width: 400px; display: block; overflow-y: scroll; } .status-wrapper { width: 400px; } </style> Modals Register.vue <template> <transition name=\"modal\"> <div class=\"modal-mask\" @click=\"$emit('close-register')\"> <div v-if=\"showSuccess\" class=\"alert alert-success d-flex justify-content-center align-text-top fw-bold\"> \u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0440\u043e\u0448\u043b\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e! \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u0434\u043e \u0432\u043e\u0439\u0442\u0438 \u0432 \u0430\u043a\u043a\u0430\u0443\u043d\u0442 </div> <div class=\"modal-wrapper\"> <div class=\"modal-container\" @click.stop> <form type=\"submit\" @submit.prevent=\"onRegSubmit\"> <h1>\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</h1> <div class=\"form-outline mb-4\"> <label class=\"form-label\" for=\"form1Example1\">\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f*</label> <input type=\"text\" id=\"form1Example1\" class=\"form-control\" v-model.trim=\"user.username\" required autocomplete=\"off\"/> </div> <div class=\"form-outline mb-4\"> <label class=\"form-label\" for=\"form2Example2\">Email*</label> <input type=\"email\" id=\"form2Example2\" class=\"form-control\" v-model.trim=\"user.email\" required autocomplete=\"off\"/> </div> <div class=\"form-outline mb-4\"> <label class=\"form-label\" for=\"form3Example3\">\u041f\u0430\u0440\u043e\u043b\u044c*</label> <input type=\"password\" id=\"form3Example3\" class=\"form-control\" v-model.trim=\"user.password\" required autocomplete=\"off\"/> </div> <div class=\"form-outline mb-5\"> <label class=\"form-label\" for=\"form4Example4\">\u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c*</label> <input type=\"password\" id=\"form4Example4\" class=\"form-control\" required autocomplete=\"off\"/> </div> <div class=\"d-grid gap-2\"> <button type=\"submit\" class=\"btn btn-primary btn-block p-2 mb-4 fw-semibold\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</button> </div> <div class=\"d-flex justify-content-center\"> <p class=\"text mx-2\">\u0423\u0436\u0435 \u0435\u0441\u0442\u044c \u0430\u043a\u043a\u0430\u0443\u043d\u0442?</p> <a class=\"link-primary fw-semibold\" href=\"#\" @click=\"$emit('show-modal')\">\u0412\u043e\u0439\u0442\u0438</a> </div> </form> </div> </div> </div> </transition> </template> <script> import {mapActions} from \"pinia\"; import useUsersStore from \"@/stores/users\"; export default { name: 'Register', data() { return { user: { username: '', password: '', email: '', is_admin: true }, showSuccess: false } }, methods: { ...mapActions(useUsersStore, ['signUp']), async onRegSubmit() { await this.signUp(this.user) this.showSuccess = true; setTimeout(() => { this.showSuccess = false; this.$emit('show-modal') }, 4000) } } } </script> <style scoped> .modal-mask { position: fixed; z-index: 9998; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); display: table; transition: opacity 0.3s ease; } .modal-wrapper { display: table-cell; vertical-align: middle; } .modal-container { width: 35%; height: fit-content; margin: 0 auto; padding: 50px; background-color: #fff; border-radius: 20px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33); transition: all 0.3s ease; font-family: Helvetica, Arial, sans-serif; } .alert { position: absolute; margin-top: 30px; width: 100%; height: 60px; } h1 { margin-bottom: 30px; } /* * The following styles are auto-applied to elements with * transition=\"modal\" when their visibility is toggled * by Vue.js. * * You can easily play with the modal transition by editing * these styles. */ .modal-enter { opacity: 0; } .modal-leave-active { opacity: 0; } .modal-enter .modal-container, .modal-leave-active .modal-container { -webkit-transform: scale(1.1); transform: scale(1.1); } </style> Login.vue <template> <transition name=\"modal\"> <div class=\"modal-mask\" @click=\"$emit('close-modal')\"> <div class=\"modal-wrapper\"> <div class=\"modal-container\" @click.stop> <form type=\"submit\" @submit.prevent=\"onLogSubmit\"> <h1>\u0412\u043e\u0439\u0442\u0438 \u0432 \u0430\u043a\u043a\u0430\u0443\u043d\u0442</h1> <div class=\"form-outline mb-4\"> <label class=\"form-label\" for=\"form1\">\u041b\u043e\u0433\u0438\u043d*</label> <input type=\"text\" id=\"form1\" class=\"form-control\" required autocomplete=\"off\" v-model=\"user.username\"/> </div> <div class=\"form-outline mb-5\"> <label class=\"form-label\" for=\"form2\">\u041f\u0430\u0440\u043e\u043b\u044c*</label> <input type=\"password\" id=\"form2\" class=\"form-control\" v-model=\"user.password\" required autocomplete=\"off\"/> </div> <div class=\"d-grid gap-2\"> <button type=\"submit\" class=\"btn btn-primary btn-block p-2 mb-4 fw-semibold\" @click=\"$emit('close-modal')\">\u0412\u043e\u0439\u0442\u0438 </button> </div> <div class=\"d-flex justify-content-center\"> <p class=\"text mx-2\">\u041d\u0435\u0442 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430?</p> <a class=\"link-primary fw-semibold\" href=\"#\" @click=\"$emit('show-register')\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</a> </div> </form> </div> </div> </div> </transition> </template> <script> import {mapActions} from \"pinia\"; import useUsersStore from \"@/stores/users\"; export default { name: 'Login', data() { return { user: { username: '', password: '', }, } }, methods: { ...mapActions(useUsersStore, ['onLogin']), async onLogSubmit() { await this.onLogin(this.user) } } } </script> <style scoped> .modal-mask { position: fixed; z-index: 9998; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); display: table; transition: opacity 0.3s ease; } .modal-wrapper { display: table-cell; vertical-align: middle; } .modal-container { width: 35%; height: fit-content; margin: 0 auto; padding: 50px; background-color: #fff; border-radius: 20px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33); transition: all 0.3s ease; font-family: Helvetica, Arial, sans-serif; } h1 { margin-bottom: 30px; } /* * The following styles are auto-applied to elements with * transition=\"modal\" when their visibility is toggled * by Vue.js. * * You can easily play with the modal transition by editing * these styles. */ .modal-enter { opacity: 0; } .modal-leave-active { opacity: 0; } .modal-enter .modal-container, .modal-leave-active .modal-container { -webkit-transform: scale(1.1); transform: scale(1.1); } </style> newGuest.vue <template> <transition name=\"modal\"> <div class=\"modal-mask\" @click=\"$emit('close-modal')\"> <div v-if=\"showSuccess\" class=\"alert alert-success d-flex justify-content-center align-text-top fw-bold\"> \u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f! </div> <div class=\"modal-wrapper\"> <div class=\"modal-container\" @click.stop> <form type=\"submit\" @submit.prevent=\"onCreateSubmit\"> <h1>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0433\u043e\u0441\u0442\u044f</h1> <div class=\"d-flex\"> <div class=\"w-50\"> <div class=\"form-outline mb-3 w-75\"> <label class=\"form-label\" for=\"form12\">\u0424\u0430\u043c\u0438\u043b\u0438\u044f*</label> <input type=\"text\" id=\"form12\" class=\"form-control\" required v-model=\"guest.last_name\" autocomplete=\"off\"/> </div> <div class=\"form-outline mb-3 w-75\"> <label class=\"form-label\" for=\"form22\">\u0418\u043c\u044f*</label> <input type=\"text\" id=\"form22\" class=\"form-control\" required v-model=\"guest.first_name\" autocomplete=\"off\"/> </div> <div class=\"form-outline mb-5 w-75\"> <label class=\"form-label\" for=\"form32\">\u041e\u0442\u0447\u0435\u0441\u0442\u0432\u043e*</label> <input type=\"text\" id=\"form32\" class=\"form-control\" required v-model=\"guest.middle_name\" autocomplete=\"off\"/> </div> </div> <div class=\"w-50\"> <div class=\"form-outline mb-3 w-75\"> <label class=\"form-label\" for=\"form42\">\u041f\u0430\u0441\u043f\u043e\u0440\u0442*</label> <input type=\"text\" id=\"form42\" class=\"form-control\" required v-model=\"guest.passport\" autocomplete=\"off\"/> </div> <div class=\"form-outline mb-3 w-75\"> <label class=\"form-label\" for=\"form52\">\u0413\u043e\u0440\u043e\u0434*</label> <input type=\"text\" id=\"form52\" class=\"form-control\" required v-model=\"guest.city\" autocomplete=\"off\"/> </div> </div> </div> <div class=\"d-grid gap-2\"> <button type=\"submit\" class=\"btn btn-primary btn-block p-2 mb-3 fw-semibold\">\u0421\u043e\u0437\u0434\u0430\u0442\u044c</button> </div> </form> </div> </div> </div> </transition> </template> <script> import {mapActions} from \"pinia\"; import useUsersStore from \"@/stores/users\"; import useGuestsStore from \"@/stores/guests\"; export default { name: 'newGuest', data() { return { guest: { username: '', password: '', first_name: '', last_name: '', middle_name: '', city: '', passport: '' }, showSuccess: false } }, methods: { ...mapActions(useGuestsStore, ['sendBooking']), ...mapActions(useUsersStore, [\"signUp\"]), async onCreateSubmit() { this.guest.username = this.guest.first_name this.guest.password = this.guest.first_name + this.guest.passport await this.signUp(this.guest) this.showSuccess = true; setTimeout(() => { this.showSuccess = false; this.$emit('sclose-modal') window.location.reload() }, 4000) } } } </script> <style scoped> .modal-mask { position: fixed; z-index: 9998; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); display: table; transition: opacity 0.3s ease; } .modal-wrapper { display: table-cell; vertical-align: middle; } .modal-container { width: 60%; height: fit-content; margin: 0 auto; padding: 50px; background-color: #fff; border-radius: 20px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33); transition: all 0.3s ease; font-family: Helvetica, Arial, sans-serif; } .alert { position: absolute; margin-top: 30px; width: 100%; height: 60px; } h1 { margin-bottom: 30px; } /* * The following styles are auto-applied to elements with * transition=\"modal\" when their visibility is toggled * by Vue.js. * * You can easily play with the modal transition by editing * these styles. */ .modal-enter { opacity: 0; } .modal-leave-active { opacity: 0; } </style> CheckIn <template> <transition name=\"modal\"> <div class=\"modal-mask\" @click=\"$emit('close-modal')\" @mouseenter=\"getFreeRoom\"> <div class=\"modal-wrapper\"> <div class=\"modal-container\" @click.stop> <form type=\"submit\" @submit.prevent=\"sendForm\"> <span class=\"\"><b>\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0433\u043e\u0441\u0442\u044f</b></span> <div style=\"height: 70px; overflow-y: scroll; margin-bottom: 30px\"> <div v-for=\"guest in freeGuests\" class=\"my-2\"> <input type=\"radio\" class=\"choice\" name=\"radButton\" :value=\"guest.id\" v-model=\"guestId\" required > <label class=\"mx-3\">{{ guest.last_name }} {{ guest.first_name }} {{ guest.middle_name }}</label> </div> </div> <div class=\"d-flex\"> <div class=\"w-50 me-4\"> <label class=\"my-3\"><b>\u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u0437\u0430\u0435\u0437\u0434\u0430</b></label> <input type=\"date\" class=\"form-control\" :max=\"rangeEnd\" :min=\"rangeStart\" v-model=\"chosenStart.dateStart\" autocomplete=\"off\" required > <input type=\"time\" class=\"form-control my-4\" v-model=\"chosenStart.timeStart\" autocomplete=\"off\" required > </div> <div class=\"w-50\"> <label class=\"my-3\"><b>\u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u0435\u0437\u0434\u0430</b></label> <input type=\"date\" class=\"form-control\" :max=\"rangeEnd\" :min=\"rangeStart\" v-model=\"chosenEnd.dateEnd\" autocomplete=\"off\" required > <input type=\"time\" class=\"form-control my-4\" v-model=\"chosenEnd.timeEnd\" autocomplete=\"off\" required > </div> </div> <div class=\"d-grid gap-2\"> <button type=\"submit\" class=\"btn btn-primary btn-block p-2 my-4 fw-semibold\" @click=\"$emit('close-modal')\">\u0417\u0430\u0441\u0435\u043b\u0438\u0442\u044c </button> </div> </form> </div> </div> </div> </transition> </template> <script> import {mapActions, mapState} from \"pinia\"; import useGuestsStore from \"@/stores/guests\"; import useRoomsStore from \"@/stores/rooms\"; import useUsersStore from \"@/stores/users\"; export default { name: 'CheckIn', props: { room: { roomId: { type: Number }, free_time: { type: Array } } }, data() { return { freeGuests: [], guestId: null, checkinGuest: null, rangeStart: null, rangeEnd: null, chosenStart: { dateStart: null, timeStart: null, }, chosenEnd: { dateEnd: null, timeEnd: null, }, booking: { guest: {}, check_in: null, check_out: null, room: null, admin: null, } } }, methods: { ...mapActions(useGuestsStore, ['getGuestsList', \"getSelectedGuest\", \"sendBooking\"]), ...mapActions(useRoomsStore, ['loadFreeRooms']), ...mapActions(useUsersStore, ['fetchUser']), async getFreeGuests() { let tmp = await this.getGuestsList() this.freeGuests = JSON.parse(JSON.stringify(tmp.filter(guest => !guest.curr_booking))) }, getFreeRoom() { this.rangeStart = this.handleDate(this.room[1][0]) this.rangeEnd = this.handleDate(this.room[1][1]) this.booking.room = parseInt(this.room[0]) }, handleDate(timestamp) { return (new Date(timestamp)).toISOString().substring(0, 10) }, async sendForm() { await this.buildData() let data = JSON.parse(JSON.stringify(this.booking)) const res = await this.sendBooking(data, this.token) window.location.reload() }, async buildData() { await this.defineGuest() await this.defineAdmin() this.booking.check_in = this.mergeDate(this.chosenStart.dateStart, this.chosenStart.timeStart) this.booking.check_out = this.mergeDate(this.chosenEnd.dateEnd, this.chosenEnd.timeEnd) }, async defineAdmin() { const {id} = await this.fetchUser() this.booking.admin = parseInt(id) }, mergeDate(date, time) { return `${date}T${time}Z` }, async defineGuest() { this.booking.guest = this.guestId } }, computed: { ...mapState(useUsersStore, [\"token\"]) }, created() { this.getFreeGuests() } } </script> <style scoped> .modal-mask { position: fixed; z-index: 9998; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); display: table; transition: opacity 0.3s ease; } .modal-wrapper { display: table-cell; vertical-align: middle; } .modal-container { width: 35%; height: fit-content; margin: 0 auto; padding: 50px; background-color: #fff; border-radius: 20px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33); transition: all 0.3s ease; font-family: Helvetica, Arial, sans-serif; } h1 { margin-bottom: 30px; } .choice { margin-left: 2px; transform: scale(1.3); } .modal-enter { opacity: 0; } .modal-leave-active { opacity: 0; } </style>","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21164"},{"location":"lab_4/#4-vuejs","text":"","title":"\u041b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 4. \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u043e\u0439 \u0447\u0430\u0441\u0442\u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 Vue.js."},{"location":"lab_4/#1","text":"","title":"\u0412\u0430\u0440\u0438\u0430\u043d\u0442 1: \u0441\u0430\u0439\u0442 \u0430\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0430\u0442\u043e\u0440\u0430 \u043e\u0442\u0435\u043b\u044f"},{"location":"lab_4/#_1","text":"\u041d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u0438, \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0439 \u0432 \u043b\u0430\u0431\u043e\u0440\u0430\u0442\u043e\u0440\u043d\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u0435 \u21163 CORS (Cross-origin resource sharing) \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0440\u0430\u0431\u043e\u0442\u043e\u0439 4.3 \u0423\u0442\u0432\u0435\u0440\u0434\u0438\u0442\u044c \u0441 \u043e\u0434\u043d\u0438\u043c \u0438\u0437 \u043f\u0440\u0435\u043f\u043e\u0434\u0430\u0432\u0430\u0442\u0435\u043b\u0435\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0434\u043b\u044f \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u0432\u0430\u0448\u0435\u0439 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u043d\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u044c\u044e \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0430\u0432\u0442\u043e\u0440\u0438\u0437\u0430\u0446\u0438\u0438, \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0443\u0447\u0451\u0442\u043d\u044b\u0445 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0438\u0435\u043d\u0442\u0441\u043a\u0438\u0435 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0438 \u043d\u0430\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u043e\u0439 \u0447\u0430\u0441\u0442\u044c\u044e (\u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u0438\u0437 \u043f\u0443\u043d\u043a\u0442\u0430 4) \u041f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c vuetify \u0438\u043b\u0438 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u0443\u044e \u0431\u0438\u0431\u043b\u0438\u043e\u0442\u0435\u043a\u0443 \u0420\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044e, \u043e\u043f\u0438\u0441\u044b\u0432\u0430\u044e\u0449\u0443\u044e \u0440\u0430\u0431\u043e\u0442\u0443 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 \u0441\u0440\u0435\u0434\u0441\u0442\u0432\u0430\u043c\u0438 MkDocs.","title":"\u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u044b"},{"location":"lab_4/#_2","text":"App.vue <script setup> import {RouterLink, RouterView} from 'vue-router' import BaseLayout from \"@/layouts/BaseLayout.vue\"; </script> <template> <BaseLayout> <RouterView/> </BaseLayout> </template> <style scoped> </style> main.js import {createApp} from 'vue' import icons from '@/components/icons' import App from '@/App.vue' import router from '@/router' import store from \"@/stores\"; import components from '@/components/my-components' import './assets/main.css' import 'bootstrap' import 'bootstrap/dist/css/bootstrap.min.css' import '@fortawesome/fontawesome-svg-core' import '@fortawesome/vue-fontawesome' import {FontAwesomeIcon} from \"@fortawesome/vue-fontawesome\"; import {library} from \"@fortawesome/fontawesome-svg-core\"; const app = createApp(App) components.forEach(component => { app.component(component.name, component) }) icons.forEach(icon => { library.add(icon) }) app.component('font-awesome-icon', FontAwesomeIcon) app.use(store) app.use(router) app.mount('#app')","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0444\u0430\u0439\u043b\u044b \u0441 \u043a\u043e\u0434\u043e\u043c"},{"location":"lab_4/#api","text":"instance.js import axios from \"axios\"; const apiURL = 'http://localhost:8000' const instance = axios.create({ baseURL: apiURL }) export default instance index.js import instance from \"@/api/instance.js\"; import RoomAPI from \"@/api/rooms\"; import UsersAPI from \"@/api/users\"; import GuestsAPI from \"@/api/guests\"; const roomAPI = new RoomAPI(instance); const userAPI = new UsersAPI(instance); const guestsAPI = new GuestsAPI(instance); export { roomAPI, userAPI, guestsAPI } users.js class UsersAPI { constructor(instance) { this.API = instance } createNewUser = async (data) => { return this.API({ method: 'POST', url: '/auth/users/', data, headers: { 'Content-Type': 'application/json' } }) } login = async (data) => { return this.API({ method: 'POST', url: '/auth/token/login/', data, headers: { 'Content-Type': 'application/json' } }) } logout = async (token) => { return this.API({ method: 'POST', url: '/auth/token/logout/', headers: { 'Authorization': `Token ${token}` } }) } fetchCurrentUserInfo = async (token) => { return this.API({ url: '/auth/users/me/', headers: { 'Authorization': `Token ${token}` } }) } getAdminById = async (id, token) => { return this.API({ url: `/auth/users/${id}/`, headers: { 'Authorization': `Token ${token}` } }) } } export default UsersAPI guests.js class GuestsAPI { constructor(instance) { this.API = instance } getAllGuests = async () => { return this.API({ url: '/hotels/guests' }) } getGuestById = async (id) => { return this.API({ url: `/hotels/guests/${id}` }) } addBooking = async (data, token) => { return this.API({ method: 'POST', url: '/hotels/booking', data, headers: { 'Content-Type': 'application/json', 'Authorization': `Token ${token}` } }) } closeBooking = async (id) => { return this.API({ method: 'POST', url: `/hotels/check_out_booking/${id}` }) } } export default GuestsAPI","title":"API"},{"location":"lab_4/#stores","text":"index.js import { persist } from 'pinia-persists' import { createPinia } from 'pinia' const pinia = createPinia() pinia.use(persist()) export default pinia rooms.js import {defineStore} from \"pinia\"; import {roomAPI} from \"@/api\"; const useRoomsStore = defineStore('rooms', { state: () => ({ rooms: [] }), actions: { async loadAllRooms() { const response = await roomAPI.getRooms(); this.rooms = response.data; return response.data }, async loadFreeRooms() { const response = await roomAPI.getFreeRooms(); return response.data }, } }) export default useRoomsStore users.js import {defineStore} from \"pinia\"; import {userAPI} from \"@/api\"; const useUsersStore = defineStore('users', { state: () => ({ user: {}, token: null, }), actions: { async signUp(user) { const response = await userAPI.createNewUser(user); return response.data; }, async onLogin(credentials) { const response = await userAPI.login(credentials) this.user = {username: credentials.username, password: credentials.password} this.token = response.data.auth_token return response }, async fetchUser() { if (this.token) { const response = await userAPI.fetchCurrentUserInfo(this.token) return response.data } }, async onLogout() { if (this.token) { const response = await userAPI.logout(this.token) this.token = null; this.user = {} return response.data } }, async getAdmin(id) { if (this.token) { const response = await userAPI.getAdminById(id, this.token) return response.data } } } }) export default useUsersStore","title":"Stores"},{"location":"lab_4/#router","text":"index.js import {createRouter, createWebHistory} from 'vue-router' import AllRoomsView from \"@/views/AllRoomsView.vue\"; import RoomView from \"@/views/RoomView.vue\"; import AllGuestsView from \"@/views/AllGuestsView.vue\"; import ReportView from \"@/views/ReportView.vue\"; import GuestView from \"@/views/GuestView.vue\"; const router = createRouter({ history: createWebHistory(import.meta.env.BASE_URL), routes: [ { path: '/', name: 'rooms', component: AllRoomsView }, { path: '/room/:id', name: 'room', props: true, component: RoomView }, { path: '/guests', name: 'guests', component: AllGuestsView }, { path: '/guest/:id', name: 'guest', props: true, component: GuestView }, { path: '/report', name: 'report', component: ReportView }, ] }) export default router","title":"Router"},{"location":"lab_4/#components","text":"Header.vue <template> <nav class=\"navbar navbar-expand-lg navbar-dark bg-dark\"> <div class=\"container-fluid\"> <div class=\"collapse navbar-collapse\" id=\"mynavbar\"> <ul class=\"navbar-nav me-auto\"> <li class=\"nav-item\"> <RouterLink class=\"nav-link\" to=\"/\">\u041a\u043e\u043c\u043d\u0430\u0442\u044b</RouterLink> </li> <li class=\"nav-item\"> <RouterLink class=\"nav-link\" to=\"/guests\">\u0413\u043e\u0441\u0442\u0438</RouterLink> </li> <li class=\"nav-item\"> <RouterLink class=\"nav-link\" to=\"/report\">\u041e\u0442\u0447\u0435\u0442</RouterLink> </li> </ul> <button class=\"btn btn-warning\" type=\"button\" @click=\"showModal=true\" v-if=\"!token\">\u0412\u043e\u0439\u0442\u0438</button> <div class=\"logged d-flex align-items-center\" v-if=\"token\"> <p class=\"username me-4 p-2 m-0\">{{ user.username }}</p> <button class=\"btn btn-danger\" @click=\"logout\">\u0412\u044b\u0439\u0442\u0438</button> </div> </div> </div> </nav> <Login v-show=\"showModal\" @close-modal=\"showModal = false\" @show-register=\"[showModal=false, showRegister=true]\"/> <Register v-show=\"showRegister\" @close-register=\"showRegister=false\" @show-modal=\"[showRegister=false, showModal=true]\"/> </template> <script> import Login from \"@/components/modal/Login.vue\"; import Register from \"@/components/modal/Register.vue\"; import {mapActions, mapState} from \"pinia\"; import useUsersStore from \"@/stores/users\"; export default { name: 'Header', components: { Login, Register }, data() { return { showModal: false, showRegister: false, } }, methods: { ...mapActions(useUsersStore, [\"onLogout\"]), async logout() { if (confirm(\"\u0412\u044b \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u044b\u0439\u0442\u0438?\")) { await this.onLogout() window.location.reload() } } }, computed: { ...mapState(useUsersStore, [\"user\"]), ...mapState(useUsersStore, ['token']) } } </script> <style> .username { color: white; } </style> Report.vue <template> <div class=\"report-wrapper d-flex justify-content-start mt-4 p-4\"> <div class=\"report-header\"> <h3>\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u043a\u0432\u0430\u0440\u0442\u0430\u043b</h3> <form type=\"submit\" class=\"mt-4\" @submit.prevent=\"generateReport\"> <input type=\"radio\" name=\"quarter\" :value=\"1\" v-model=\"selectedValue\"> <label>1-\u0439 (\u042f\u043d\u0432\u0430\u0440\u044c-\u041c\u0430\u0440\u0442)</label> <br> <input type=\"radio\" name=\"quarter\" :value=\"2\" v-model=\"selectedValue\"> <label>2-\u0439 (\u0410\u043f\u0440\u0435\u043b\u044c-\u0418\u044e\u043d\u044c)</label> <br> <input type=\"radio\" name=\"quarter\" :value=\"3\" v-model=\"selectedValue\"> <label>3-\u0439 (\u0418\u044e\u043b\u044c-\u0421\u0435\u043d\u0442\u044f\u0431\u0440\u044c)</label> <br> <input type=\"radio\" name=\"quarter\" :value=\"4\" v-model=\"selectedValue\"> <label>4-\u0439 (\u041e\u043a\u0442\u0440\u044f\u0431\u0440\u044c-\u0414\u0435\u043a\u0430\u0431\u0440\u044c)</label> <br> <button class=\"btn btn-success mt-3\" type=\"submit\">\u0421\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c</button> </form> </div> <div class=\"report-body\" v-if=\"report\"> <h3>\u041e\u0442\u0447\u0435\u0442 \u0437\u0430 {{ selectedValue }}-\u0439 \u043a\u0432\u0430\u0440\u0442\u0430\u043b</h3> <h4>\u041a\u043e\u043c\u043d\u0430\u0442\u044b:</h4> <table> <tr class=\"\"> <th scope=\"col\" width=\"25%\">\u041d\u043e\u043c\u0435\u0440</th> <th scope=\"col\" width=\"50%\">\u0411\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f</th> <th scope=\"col\" width=\"25%\">\u041f\u0440\u043e\u0444\u0438\u0442</th> </tr> <tr v-for=\"room in report.rooms\"> <td>{{ room.number }}</td> <td>{{ room.count }}</td> <td>\u20bd {{ room.profit }}</td> </tr> </table> <h4>\u042d\u0442\u0430\u0436\u0438:</h4> <table> <tr class=\"\"> <th scope=\"col\" width=\"50%\">\u042d\u0442\u0430\u0436</th> <th scope=\"col\" width=\"50%\">\u041a\u043e\u043b-\u0432\u043e \u043a\u043e\u043c\u043d\u0430\u0442</th> </tr> <tr v-for=\"floor in report.floors\"> <td>{{ floor.floor }}</td> <td>{{ floor.count }}</td> </tr> </table> <h4> \u041e\u0431\u0449\u0438\u0439 \u043f\u0440\u043e\u0444\u0438\u0442: </h4> <h5>\u20bd {{ report.profit }}</h5> </div> </div> </template> <script> import axios from \"axios\"; export default { name: 'report', data() { return { selectedValue: null, report: null } }, methods: { async generateReport() { if (this.selectedValue < 2) { this.report = (await axios.get(`http://localhost:8000/hotels/report/${this.selectedValue}`)).data } else { this.report = null alert('\u041f\u043e\u043a\u0430 \u043e\u0442\u0447\u0435\u0442 \u043d\u0435 \u0434\u043e\u0441\u0442\u0443\u043f\u0435\u043d') } } }, } </script> <style scoped> .report-header { margin-right: 300px; } input { margin-bottom: 20px; margin-right: 10px; } h4 { margin-top: 30px; } </style> Rooms.vue <template> <div class=\"content \"> <div class=\"mb-2 d-flex justify-content-between align-items-center\"> <div class=\"position-relative\"> <custom-input v-model=\"searchQuery\" @send-search=\"findRoom\"></custom-input> </div> <div class=\"px-2\"> <select-list style=\"width: 120px\" class=\"mx-5 border-0\" v-model=\"sortName\" :options=\"sortOptions\" > </select-list> <filters-list style=\"width: 100px\" class=\" border-0\" v-model=\"filterName\" :options=\"filterOptions\" > </filters-list> </div> </div> <div class=\"table-responsive\"> <table class=\"table table-responsive table-borderless\"> <thead> <tr class=\"bg-light\"> <th scope=\"col\" width=\"10%\">\u2116 \u043a\u043e\u043c\u043d\u0430\u0442\u044b</th> <th scope=\"col\" width=\"15%\">\u042d\u0442\u0430\u0436</th> <th scope=\"col\" width=\"15%\">\u0422\u0438\u043f</th> <th scope=\"col\" width=\"20%\">\u0422\u0435\u043b\u0435\u0444\u043e\u043d</th> <th scope=\"col\" class=\"text-start\" width=\"15%\"><span>\u0426\u0435\u043d\u0430/\u0434\u0435\u043d\u044c</span></th> <th scope=\"col\" width=\"20%\">\u0421\u0442\u0430\u0442\u0443\u0441</th> <th scope=\"col\" class=\"text-end\" width=\"15%\">\u041f\u043e\u0434\u0440\u043e\u0431\u043d\u0435\u0435...</th> </tr> </thead> <tbody v-for=\"room in rooms\"> <tr class=\"\"> <td>{{ room.number }}</td> <td>{{ room.floor }}</td> <td>{{ room.room_type }}</td> <td>{{ room.phone }}</td> <td class=\"text-start\"><span class=\"fw-bolder\">\u20bd {{ parseFloat(room.price).toFixed(2) }}</span></td> <td class=\"fw-bold\" :class=\"[room.is_free ? 'text-success' : 'text-danger']\"> {{ room.is_free ? '\u0421\u0432\u043e\u0431\u043e\u0434\u043d\u043e' : '\u0417\u0430\u043d\u044f\u0442\u043e' }} </td> <td class=\"text-end\"> <button class=\"btn btn-info\" @click=\"openRoom(room.id)\">\u0414\u0435\u0442\u0430\u043b\u0438</button> </td> </tr> </tbody> </table> </div> </div> </template> <script> import {mapActions} from \"pinia\"; import useRoomsStore from \"@/stores/rooms\"; import useUsersStore from \"@/stores/users\"; import FiltersList from \"@/components/my-components/FiltersList.vue\"; import Guest from \"@/components/modal/newGuest.vue\"; export default { name: 'Rooms', components: {Guest}, data() { return { rooms: [], searchQuery: '', sortName: '', filterName: '', filterOptions: [ {value: 'ANY', name: '\u041b\u044e\u0431\u043e\u0439'}, {value: 'TRIPLE', name: 'TRIPLE'}, {value: 'DOUBLE', name: 'DOUBLE'}, {value: 'SINGLE', name: 'SINGLE'}, ], sortOptions: [ {value: 'default', name: 'Default'}, {value: 'number ASC', name: '\u041f\u043e \u043d\u043e\u043c\u0435\u0440\u0443 (ASC)'}, {value: 'number DESC', name: '\u041f\u043e \u043d\u043e\u043c\u0435\u0440\u0443 (DESC)'}, {value: 'floor ASC', name: '\u041f\u043e \u044d\u0442\u0430\u0436\u0443 (ASC)'}, {value: 'floor DESC', name: '\u041f\u043e \u044d\u0442\u0430\u0436\u0443 (DESC)'}, {value: 'price ASC', name: '\u041f\u043e \u0446\u0435\u043d\u0435 (ASC)'}, {value: 'price DESC', name: '\u041f\u043e \u0446\u0435\u043d\u0435 (DESC)'}, ], } }, methods: { ...mapActions(useRoomsStore, ['loadAllRooms']), ...mapActions(useUsersStore, ['fetchUser']), async getRooms() { this.rooms = await this.loadAllRooms(); // console.log(this.rooms) }, openRoom(roomId) { this.$router.push({name: 'room', params: {id: roomId}}) }, async findRoom() { if (this.searchQuery == '') { this.rooms = await this.loadAllRooms(); } else { this.rooms = this.rooms.filter(room => room.number.includes(this.searchQuery)) } }, }, mounted() { this.getRooms() this.fetchUser() }, watch: { async sortName(sortName) { if (sortName == 'default') { this.rooms = await this.loadAllRooms() } else { const sortSplit = sortName.split(' ') const type = sortSplit[0] const order = sortSplit[1] this.rooms.sort((a, b) => a[type] - b[type]) if (order === 'DESC') { this.rooms.reverse() } } }, async filterName(filterName) { this.rooms = await this.loadAllRooms() if (filterName !== 'ANY') { this.rooms = this.rooms.filter(room => room.room_type == filterName) } else { this.rooms = await this.loadAllRooms() } }, } } </script> <style scoped> .content { margin-top: 20px; padding: 30px; } .dropdown-input label { display: block; padding: 3px 20px 0 20px; clear: both; font-weight: 400; line-height: 1.42857143; color: #333; white-space: nowrap; } </style> Room.vue <template> <div class=\"room-wrapper mt-4 p-3\"> <h1>\u041a\u043e\u043c\u043d\u0430\u0442\u0430 \u2116 {{ room.number }} </h1> <div class=\"d-flex justify-content-between mt-4 status-wrapper\"> <h3 class=\"fw-bold\">\u0421\u0442\u0430\u0442\u0443\u0441: <span :class=\"[room.is_free ? 'text-success' : 'text-danger']\">{{ room.is_free ? '\u0421\u0432\u043e\u0431\u043e\u0434\u043d\u043e' : '\u0417\u0430\u043d\u044f\u0442\u043e' }}</span> </h3> <button v-if=\"room.is_free\" class=\"btn btn-toggle btn-primary\" @click=\"isVisible = true\" :class=\"[room.is_free ? 'btn-primary' : 'btn-danger']\"> {{ '\u0417\u0430\u0441\u0435\u043b\u0438\u0442\u044c' }} </button> <button v-if=\"!room.is_free\" class=\"btn btn-toggle btn-danger\" @click=\"checkOut\"> {{ '\u0412\u044b\u0441\u0435\u043b\u0438\u0442\u044c' }} </button> </div> <div class=\"room-body mt-3\"> <p>\u0422\u0438\u043f: <strong>{{ room.room_type }}</strong></p> <p>\u042d\u0442\u0430\u0436: <strong>{{ room.floor }}</strong></p> <p>\u041d\u043e\u043c\u0435\u0440 \u0442\u0435\u043b\u0435\u0444\u043e\u043d\u0430: <strong>{{ room.phone }}</strong></p> <p class=\"mb-5\">\u0426\u0435\u043d\u0430/\u0434\u0435\u043d\u044c: <strong>\u20bd {{ parseFloat(room.price).toFixed(2) }}</strong></p> <h3>\u0418\u0441\u0442\u043e\u0440\u0438\u044f \u0431\u0440\u043e\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0439</h3> <div class=\"history-wrapper mb-5\"> <div v-for=\"booking in room.bookings\" class=\"mb-4\"> <h5>{{ booking.guest.last_name }} {{ booking.guest.first_name }} {{ booking.guest.middle_name }}</h5> <p> <span><b>\u041d\u043e\u043c\u0435\u0440 \u043f\u0430\u0441\u043f\u043e\u0440\u0442\u0430:</b> {{ booking.guest.passport }}</span><br> <span><b>\u0413\u043e\u0440\u043e\u0434:</b> {{ booking.guest.city }}</span><br> <span><b>\u0414\u0430\u0442\u0430 \u0437\u0430\u0435\u0437\u0434\u0430:</b> {{ dateParser(booking.check_in) }}</span><br> <span><b>\u0414\u0430\u0442\u0430 \u0432\u044b\u0435\u0437\u0434\u0430:</b> {{ dateParser(booking.check_out) }}</span> </p> </div> </div> <button class=\"btn btn-secondary\" @click=\"getBack\">\u041d\u0430\u0437\u0430\u0434</button> </div> </div> <CheckIn v-show=\"isVisible\" @close-modal=\"isVisible = false\" :room=\"[room.id, JSON.parse(JSON.stringify(free_time))]\"/> </template> <script> import {mapActions, mapState} from \"pinia\"; import useRoomsStore from \"@/stores/rooms\"; import CheckIn from \"@/components/modal/CheckIn.vue\"; import useGuestsStore from \"@/stores/guests\"; export default { components: { CheckIn }, props: { id: String }, data() { return { room: {}, isVisible: false, free_time: null } }, methods: { ...mapActions(useRoomsStore, ['loadAllRooms', \"loadFreeRooms\"]), ...mapActions(useGuestsStore, ['getGuestsList', \"sendClosed\"]), async getSelectedRoom() { const rooms = await this.loadAllRooms() for (let i = 0; i < rooms.length; i++) { if (rooms[i].id === parseInt(this.id)) { this.room = rooms[i] break } } }, async getFreeRange() { let free = await this.loadFreeRooms() free = free.filter(room => room.id == this.id) this.free_time = free[0].free_time[0] }, dateParser(string) { let date = new Date(string) return date.toUTCString() }, getBack() { this.$router.push('/') }, async checkOut() { if (confirm('\u0412\u044b \u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0445\u043e\u0442\u0438\u0442\u0435 \u0432\u044b\u0441\u0435\u043b\u0438\u0442\u044c \u0433\u043e\u0441\u0442\u044f?')) { await this.sendClosed(this.room.curr_booking) window.location.reload() } // } }, mounted() { this.getSelectedRoom() this.getFreeRange() } } </script> <style scoped> p { padding: 0; margin: 0 0 10px; } .history-wrapper { margin-top: 30px; height: 200px; width: 400px; display: block; overflow-y: scroll; } .status-wrapper { width: 400px; } </style>","title":"Components"},{"location":"lab_4/#modals","text":"Register.vue <template> <transition name=\"modal\"> <div class=\"modal-mask\" @click=\"$emit('close-register')\"> <div v-if=\"showSuccess\" class=\"alert alert-success d-flex justify-content-center align-text-top fw-bold\"> \u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u043f\u0440\u043e\u0448\u043b\u0438 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044e! \u0422\u0435\u043f\u0435\u0440\u044c \u043d\u0430\u0434\u043e \u0432\u043e\u0439\u0442\u0438 \u0432 \u0430\u043a\u043a\u0430\u0443\u043d\u0442 </div> <div class=\"modal-wrapper\"> <div class=\"modal-container\" @click.stop> <form type=\"submit\" @submit.prevent=\"onRegSubmit\"> <h1>\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</h1> <div class=\"form-outline mb-4\"> <label class=\"form-label\" for=\"form1Example1\">\u0418\u043c\u044f \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f*</label> <input type=\"text\" id=\"form1Example1\" class=\"form-control\" v-model.trim=\"user.username\" required autocomplete=\"off\"/> </div> <div class=\"form-outline mb-4\"> <label class=\"form-label\" for=\"form2Example2\">Email*</label> <input type=\"email\" id=\"form2Example2\" class=\"form-control\" v-model.trim=\"user.email\" required autocomplete=\"off\"/> </div> <div class=\"form-outline mb-4\"> <label class=\"form-label\" for=\"form3Example3\">\u041f\u0430\u0440\u043e\u043b\u044c*</label> <input type=\"password\" id=\"form3Example3\" class=\"form-control\" v-model.trim=\"user.password\" required autocomplete=\"off\"/> </div> <div class=\"form-outline mb-5\"> <label class=\"form-label\" for=\"form4Example4\">\u041f\u043e\u0432\u0442\u043e\u0440\u0438\u0442\u0435 \u043f\u0430\u0440\u043e\u043b\u044c*</label> <input type=\"password\" id=\"form4Example4\" class=\"form-control\" required autocomplete=\"off\"/> </div> <div class=\"d-grid gap-2\"> <button type=\"submit\" class=\"btn btn-primary btn-block p-2 mb-4 fw-semibold\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</button> </div> <div class=\"d-flex justify-content-center\"> <p class=\"text mx-2\">\u0423\u0436\u0435 \u0435\u0441\u0442\u044c \u0430\u043a\u043a\u0430\u0443\u043d\u0442?</p> <a class=\"link-primary fw-semibold\" href=\"#\" @click=\"$emit('show-modal')\">\u0412\u043e\u0439\u0442\u0438</a> </div> </form> </div> </div> </div> </transition> </template> <script> import {mapActions} from \"pinia\"; import useUsersStore from \"@/stores/users\"; export default { name: 'Register', data() { return { user: { username: '', password: '', email: '', is_admin: true }, showSuccess: false } }, methods: { ...mapActions(useUsersStore, ['signUp']), async onRegSubmit() { await this.signUp(this.user) this.showSuccess = true; setTimeout(() => { this.showSuccess = false; this.$emit('show-modal') }, 4000) } } } </script> <style scoped> .modal-mask { position: fixed; z-index: 9998; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); display: table; transition: opacity 0.3s ease; } .modal-wrapper { display: table-cell; vertical-align: middle; } .modal-container { width: 35%; height: fit-content; margin: 0 auto; padding: 50px; background-color: #fff; border-radius: 20px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33); transition: all 0.3s ease; font-family: Helvetica, Arial, sans-serif; } .alert { position: absolute; margin-top: 30px; width: 100%; height: 60px; } h1 { margin-bottom: 30px; } /* * The following styles are auto-applied to elements with * transition=\"modal\" when their visibility is toggled * by Vue.js. * * You can easily play with the modal transition by editing * these styles. */ .modal-enter { opacity: 0; } .modal-leave-active { opacity: 0; } .modal-enter .modal-container, .modal-leave-active .modal-container { -webkit-transform: scale(1.1); transform: scale(1.1); } </style> Login.vue <template> <transition name=\"modal\"> <div class=\"modal-mask\" @click=\"$emit('close-modal')\"> <div class=\"modal-wrapper\"> <div class=\"modal-container\" @click.stop> <form type=\"submit\" @submit.prevent=\"onLogSubmit\"> <h1>\u0412\u043e\u0439\u0442\u0438 \u0432 \u0430\u043a\u043a\u0430\u0443\u043d\u0442</h1> <div class=\"form-outline mb-4\"> <label class=\"form-label\" for=\"form1\">\u041b\u043e\u0433\u0438\u043d*</label> <input type=\"text\" id=\"form1\" class=\"form-control\" required autocomplete=\"off\" v-model=\"user.username\"/> </div> <div class=\"form-outline mb-5\"> <label class=\"form-label\" for=\"form2\">\u041f\u0430\u0440\u043e\u043b\u044c*</label> <input type=\"password\" id=\"form2\" class=\"form-control\" v-model=\"user.password\" required autocomplete=\"off\"/> </div> <div class=\"d-grid gap-2\"> <button type=\"submit\" class=\"btn btn-primary btn-block p-2 mb-4 fw-semibold\" @click=\"$emit('close-modal')\">\u0412\u043e\u0439\u0442\u0438 </button> </div> <div class=\"d-flex justify-content-center\"> <p class=\"text mx-2\">\u041d\u0435\u0442 \u0430\u043a\u043a\u0430\u0443\u043d\u0442\u0430?</p> <a class=\"link-primary fw-semibold\" href=\"#\" @click=\"$emit('show-register')\">\u0420\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f</a> </div> </form> </div> </div> </div> </transition> </template> <script> import {mapActions} from \"pinia\"; import useUsersStore from \"@/stores/users\"; export default { name: 'Login', data() { return { user: { username: '', password: '', }, } }, methods: { ...mapActions(useUsersStore, ['onLogin']), async onLogSubmit() { await this.onLogin(this.user) } } } </script> <style scoped> .modal-mask { position: fixed; z-index: 9998; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); display: table; transition: opacity 0.3s ease; } .modal-wrapper { display: table-cell; vertical-align: middle; } .modal-container { width: 35%; height: fit-content; margin: 0 auto; padding: 50px; background-color: #fff; border-radius: 20px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33); transition: all 0.3s ease; font-family: Helvetica, Arial, sans-serif; } h1 { margin-bottom: 30px; } /* * The following styles are auto-applied to elements with * transition=\"modal\" when their visibility is toggled * by Vue.js. * * You can easily play with the modal transition by editing * these styles. */ .modal-enter { opacity: 0; } .modal-leave-active { opacity: 0; } .modal-enter .modal-container, .modal-leave-active .modal-container { -webkit-transform: scale(1.1); transform: scale(1.1); } </style> newGuest.vue <template> <transition name=\"modal\"> <div class=\"modal-mask\" @click=\"$emit('close-modal')\"> <div v-if=\"showSuccess\" class=\"alert alert-success d-flex justify-content-center align-text-top fw-bold\"> \u0412\u044b \u0443\u0441\u043f\u0435\u0448\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f! </div> <div class=\"modal-wrapper\"> <div class=\"modal-container\" @click.stop> <form type=\"submit\" @submit.prevent=\"onCreateSubmit\"> <h1>\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0433\u043e\u0441\u0442\u044f</h1> <div class=\"d-flex\"> <div class=\"w-50\"> <div class=\"form-outline mb-3 w-75\"> <label class=\"form-label\" for=\"form12\">\u0424\u0430\u043c\u0438\u043b\u0438\u044f*</label> <input type=\"text\" id=\"form12\" class=\"form-control\" required v-model=\"guest.last_name\" autocomplete=\"off\"/> </div> <div class=\"form-outline mb-3 w-75\"> <label class=\"form-label\" for=\"form22\">\u0418\u043c\u044f*</label> <input type=\"text\" id=\"form22\" class=\"form-control\" required v-model=\"guest.first_name\" autocomplete=\"off\"/> </div> <div class=\"form-outline mb-5 w-75\"> <label class=\"form-label\" for=\"form32\">\u041e\u0442\u0447\u0435\u0441\u0442\u0432\u043e*</label> <input type=\"text\" id=\"form32\" class=\"form-control\" required v-model=\"guest.middle_name\" autocomplete=\"off\"/> </div> </div> <div class=\"w-50\"> <div class=\"form-outline mb-3 w-75\"> <label class=\"form-label\" for=\"form42\">\u041f\u0430\u0441\u043f\u043e\u0440\u0442*</label> <input type=\"text\" id=\"form42\" class=\"form-control\" required v-model=\"guest.passport\" autocomplete=\"off\"/> </div> <div class=\"form-outline mb-3 w-75\"> <label class=\"form-label\" for=\"form52\">\u0413\u043e\u0440\u043e\u0434*</label> <input type=\"text\" id=\"form52\" class=\"form-control\" required v-model=\"guest.city\" autocomplete=\"off\"/> </div> </div> </div> <div class=\"d-grid gap-2\"> <button type=\"submit\" class=\"btn btn-primary btn-block p-2 mb-3 fw-semibold\">\u0421\u043e\u0437\u0434\u0430\u0442\u044c</button> </div> </form> </div> </div> </div> </transition> </template> <script> import {mapActions} from \"pinia\"; import useUsersStore from \"@/stores/users\"; import useGuestsStore from \"@/stores/guests\"; export default { name: 'newGuest', data() { return { guest: { username: '', password: '', first_name: '', last_name: '', middle_name: '', city: '', passport: '' }, showSuccess: false } }, methods: { ...mapActions(useGuestsStore, ['sendBooking']), ...mapActions(useUsersStore, [\"signUp\"]), async onCreateSubmit() { this.guest.username = this.guest.first_name this.guest.password = this.guest.first_name + this.guest.passport await this.signUp(this.guest) this.showSuccess = true; setTimeout(() => { this.showSuccess = false; this.$emit('sclose-modal') window.location.reload() }, 4000) } } } </script> <style scoped> .modal-mask { position: fixed; z-index: 9998; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); display: table; transition: opacity 0.3s ease; } .modal-wrapper { display: table-cell; vertical-align: middle; } .modal-container { width: 60%; height: fit-content; margin: 0 auto; padding: 50px; background-color: #fff; border-radius: 20px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33); transition: all 0.3s ease; font-family: Helvetica, Arial, sans-serif; } .alert { position: absolute; margin-top: 30px; width: 100%; height: 60px; } h1 { margin-bottom: 30px; } /* * The following styles are auto-applied to elements with * transition=\"modal\" when their visibility is toggled * by Vue.js. * * You can easily play with the modal transition by editing * these styles. */ .modal-enter { opacity: 0; } .modal-leave-active { opacity: 0; } </style> CheckIn <template> <transition name=\"modal\"> <div class=\"modal-mask\" @click=\"$emit('close-modal')\" @mouseenter=\"getFreeRoom\"> <div class=\"modal-wrapper\"> <div class=\"modal-container\" @click.stop> <form type=\"submit\" @submit.prevent=\"sendForm\"> <span class=\"\"><b>\u0412\u044b\u0431\u0435\u0440\u0438\u0442\u0435 \u0433\u043e\u0441\u0442\u044f</b></span> <div style=\"height: 70px; overflow-y: scroll; margin-bottom: 30px\"> <div v-for=\"guest in freeGuests\" class=\"my-2\"> <input type=\"radio\" class=\"choice\" name=\"radButton\" :value=\"guest.id\" v-model=\"guestId\" required > <label class=\"mx-3\">{{ guest.last_name }} {{ guest.first_name }} {{ guest.middle_name }}</label> </div> </div> <div class=\"d-flex\"> <div class=\"w-50 me-4\"> <label class=\"my-3\"><b>\u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u0437\u0430\u0435\u0437\u0434\u0430</b></label> <input type=\"date\" class=\"form-control\" :max=\"rangeEnd\" :min=\"rangeStart\" v-model=\"chosenStart.dateStart\" autocomplete=\"off\" required > <input type=\"time\" class=\"form-control my-4\" v-model=\"chosenStart.timeStart\" autocomplete=\"off\" required > </div> <div class=\"w-50\"> <label class=\"my-3\"><b>\u0414\u0430\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u044f \u0432\u044b\u0435\u0437\u0434\u0430</b></label> <input type=\"date\" class=\"form-control\" :max=\"rangeEnd\" :min=\"rangeStart\" v-model=\"chosenEnd.dateEnd\" autocomplete=\"off\" required > <input type=\"time\" class=\"form-control my-4\" v-model=\"chosenEnd.timeEnd\" autocomplete=\"off\" required > </div> </div> <div class=\"d-grid gap-2\"> <button type=\"submit\" class=\"btn btn-primary btn-block p-2 my-4 fw-semibold\" @click=\"$emit('close-modal')\">\u0417\u0430\u0441\u0435\u043b\u0438\u0442\u044c </button> </div> </form> </div> </div> </div> </transition> </template> <script> import {mapActions, mapState} from \"pinia\"; import useGuestsStore from \"@/stores/guests\"; import useRoomsStore from \"@/stores/rooms\"; import useUsersStore from \"@/stores/users\"; export default { name: 'CheckIn', props: { room: { roomId: { type: Number }, free_time: { type: Array } } }, data() { return { freeGuests: [], guestId: null, checkinGuest: null, rangeStart: null, rangeEnd: null, chosenStart: { dateStart: null, timeStart: null, }, chosenEnd: { dateEnd: null, timeEnd: null, }, booking: { guest: {}, check_in: null, check_out: null, room: null, admin: null, } } }, methods: { ...mapActions(useGuestsStore, ['getGuestsList', \"getSelectedGuest\", \"sendBooking\"]), ...mapActions(useRoomsStore, ['loadFreeRooms']), ...mapActions(useUsersStore, ['fetchUser']), async getFreeGuests() { let tmp = await this.getGuestsList() this.freeGuests = JSON.parse(JSON.stringify(tmp.filter(guest => !guest.curr_booking))) }, getFreeRoom() { this.rangeStart = this.handleDate(this.room[1][0]) this.rangeEnd = this.handleDate(this.room[1][1]) this.booking.room = parseInt(this.room[0]) }, handleDate(timestamp) { return (new Date(timestamp)).toISOString().substring(0, 10) }, async sendForm() { await this.buildData() let data = JSON.parse(JSON.stringify(this.booking)) const res = await this.sendBooking(data, this.token) window.location.reload() }, async buildData() { await this.defineGuest() await this.defineAdmin() this.booking.check_in = this.mergeDate(this.chosenStart.dateStart, this.chosenStart.timeStart) this.booking.check_out = this.mergeDate(this.chosenEnd.dateEnd, this.chosenEnd.timeEnd) }, async defineAdmin() { const {id} = await this.fetchUser() this.booking.admin = parseInt(id) }, mergeDate(date, time) { return `${date}T${time}Z` }, async defineGuest() { this.booking.guest = this.guestId } }, computed: { ...mapState(useUsersStore, [\"token\"]) }, created() { this.getFreeGuests() } } </script> <style scoped> .modal-mask { position: fixed; z-index: 9998; top: 0; left: 0; width: 100%; height: 100%; background-color: rgba(0, 0, 0, 0.5); display: table; transition: opacity 0.3s ease; } .modal-wrapper { display: table-cell; vertical-align: middle; } .modal-container { width: 35%; height: fit-content; margin: 0 auto; padding: 50px; background-color: #fff; border-radius: 20px; box-shadow: 0 2px 8px rgba(0, 0, 0, 0.33); transition: all 0.3s ease; font-family: Helvetica, Arial, sans-serif; } h1 { margin-bottom: 30px; } .choice { margin-left: 2px; transform: scale(1.3); } .modal-enter { opacity: 0; } .modal-leave-active { opacity: 0; } </style>","title":"Modals"},{"location":"prac_3.1/","text":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163.1 \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 1 \u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. models.py - \u041c\u043e\u0434\u0435\u043b\u044c \u0411\u0414 class Car_owner(models.Model): id_owner = models.IntegerField(primary_key=True) last_name = models.CharField(max_length=30, null=False) first_name = models.CharField(max_length=30, null=False) birth_date = models.DateField(null=True) class Car(models.Model): id_car = models.IntegerField(primary_key=True) number_plate = models.CharField(max_length=15, null=False) brand = models.CharField(max_length=20, null=False) model = models.CharField(max_length=20, null=False) color = models.CharField(max_length=30, null=True) class Ownership(models.Model): id_owner_car = models.IntegerField(primary_key=True) id_owner = models.ForeignKey(Car_owner, on_delete=models.CASCADE) id_car = models.ForeignKey(Car, on_delete=models.CASCADE) start_date = models.DateField() end_date = models.DateField(null=True) class Driver_license(models.Model): id_license = models.IntegerField(primary_key=True) id_owner = models.ForeignKey(Car_owner, on_delete=models.CASCADE) license_number = models.CharField(max_length=10, null=False) type = models.CharField(max_length=10, null=False) issue_date = models.DateField() \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u0438 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 2 \u041f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0432 \u043f\u0440.1 \u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e: \u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c): \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435): \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430): \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442): \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435): \u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 3 \u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b: \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435 \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438 \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f (\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u043e\u0434\u043d\u0438 \u0438 \u0442\u0435 \u0436\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435\u0441\u044c \u043c\u0435\u0442\u043e\u0434\u043e\u043c .distinct()","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163.1"},{"location":"prac_3.1/#no31","text":"","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0440\u0430\u0431\u043e\u0442\u0430 \u21163.1"},{"location":"prac_3.1/#1","text":"\u041d\u0430\u043f\u0438\u0448\u0438\u0442\u0435 \u0437\u0430\u043f\u0440\u043e\u0441 \u043d\u0430 \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 6-7 \u043d\u043e\u0432\u044b\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0438 5-6 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439, \u043a\u0430\u0436\u0434\u043e\u043c\u0443 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0443 \u043d\u0430\u0437\u043d\u0430\u0447\u044c\u0442\u0435 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0435 \u0438 \u043e\u0442 1 \u0434\u043e 3 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439. models.py - \u041c\u043e\u0434\u0435\u043b\u044c \u0411\u0414 class Car_owner(models.Model): id_owner = models.IntegerField(primary_key=True) last_name = models.CharField(max_length=30, null=False) first_name = models.CharField(max_length=30, null=False) birth_date = models.DateField(null=True) class Car(models.Model): id_car = models.IntegerField(primary_key=True) number_plate = models.CharField(max_length=15, null=False) brand = models.CharField(max_length=20, null=False) model = models.CharField(max_length=20, null=False) color = models.CharField(max_length=30, null=True) class Ownership(models.Model): id_owner_car = models.IntegerField(primary_key=True) id_owner = models.ForeignKey(Car_owner, on_delete=models.CASCADE) id_car = models.ForeignKey(Car, on_delete=models.CASCADE) start_date = models.DateField() end_date = models.DateField(null=True) class Driver_license(models.Model): id_license = models.IntegerField(primary_key=True) id_owner = models.ForeignKey(Car_owner, on_delete=models.CASCADE) license_number = models.CharField(max_length=10, null=False) type = models.CharField(max_length=10, null=False) issue_date = models.DateField()","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 1"},{"location":"prac_3.1/#_1","text":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0430\u0432\u0442\u043e\u043c\u043e\u0431\u0438\u043b\u0435\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0445 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u0439 \u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0432\u044f\u0437\u0438 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0441\u0443\u0449\u043d\u043e\u0441\u0442\u0435\u0439"},{"location":"prac_3.1/#2","text":"\u041f\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u043d\u044b\u043c \u0432 \u043f\u0440.1 \u0434\u0430\u043d\u043d\u044b\u043c \u043d\u0430\u043f\u0438\u0441\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b \u043d\u0430 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e: \u0412\u044b\u0432\u0435\u0434\u0435\u0442\u0435 \u0432\u0441\u0435 \u043c\u0430\u0448\u0438\u043d\u044b \u043c\u0430\u0440\u043a\u0438 \u201cToyota\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u043c\u0430\u0440\u043a\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443 \u0432\u0430\u0441 \u0435\u0441\u0442\u044c): \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439 \u0441 \u0438\u043c\u0435\u043d\u0435\u043c \u201c\u041e\u043b\u0435\u0433\u201d (\u0438\u043b\u0438 \u043b\u044e\u0431\u044b\u043c \u0434\u0440\u0443\u0433\u0438\u043c \u0438\u043c\u0435\u043d\u0435\u043c \u043d\u0430 \u0432\u0430\u0448\u0435 \u0443\u0441\u043c\u043e\u0442\u0440\u0435\u043d\u0438\u0435): \u0412\u0437\u044f\u0432 \u043b\u044e\u0431\u043e\u0433\u043e \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u043e\u0433\u043e \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u0435\u0433\u043e id, \u0438 \u043f\u043e \u044d\u0442\u043e\u043c\u0443 id \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0432 \u0432\u0438\u0434\u0435 \u043e\u0431\u044a\u0435\u043a\u0442\u0430 \u043c\u043e\u0434\u0435\u043b\u0438 (\u043c\u043e\u0436\u043d\u043e \u0432 2 \u0437\u0430\u043f\u0440\u043e\u0441\u0430): \u0412\u044b\u0432\u0435\u0441\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043a\u0440\u0430\u0441\u043d\u044b\u0445 \u043c\u0430\u0448\u0438\u043d (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0433\u043e \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0446\u0432\u0435\u0442\u0430, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443 \u0432\u0430\u0441 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442): \u041d\u0430\u0439\u0442\u0438 \u0432\u0441\u0435\u0445 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432, \u0447\u0435\u0439 \u0433\u043e\u0434 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439 \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 2010 (\u0438\u043b\u0438 \u043b\u044e\u0431\u043e\u0439 \u0434\u0440\u0443\u0433\u043e\u0439 \u0433\u043e\u0434, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u0443 \u0432\u0430\u0441 \u0432 \u0431\u0430\u0437\u0435):","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 2"},{"location":"prac_3.1/#3","text":"\u041d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0440\u0435\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u044b: \u0412\u044b\u0432\u043e\u0434 \u0434\u0430\u0442\u044b \u0432\u044b\u0434\u0430\u0447\u0438 \u0441\u0430\u043c\u043e\u0433\u043e \u0441\u0442\u0430\u0440\u0448\u0435\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044c\u0441\u043a\u043e\u0433\u043e \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f \u0423\u043a\u0430\u0436\u0438\u0442\u0435 \u0441\u0430\u043c\u0443\u044e \u043f\u043e\u0437\u0434\u043d\u044e\u044e \u0434\u0430\u0442\u0443 \u0432\u043b\u0430\u0434\u0435\u043d\u0438\u044f \u043c\u0430\u0448\u0438\u043d\u043e\u0439, \u0438\u043c\u0435\u044e\u0449\u0443\u044e \u043a\u0430\u043a\u0443\u044e-\u0442\u043e \u0438\u0437 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u0432 \u0432\u0430\u0448\u0435\u0439 \u0431\u0430\u0437\u0435 \u0412\u044b\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u0434\u043b\u044f \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u0432\u043e\u0434\u0438\u0442\u0435\u043b\u044f \u041f\u043e\u0434\u0441\u0447\u0438\u0442\u0430\u0439\u0442\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043c\u0430\u0448\u0438\u043d \u043a\u0430\u0436\u0434\u043e\u0439 \u043c\u0430\u0440\u043a\u0438 \u041e\u0442\u0441\u043e\u0440\u0442\u0438\u0440\u0443\u0439\u0442\u0435 \u0432\u0441\u0435\u0445 \u0430\u0432\u0442\u043e\u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u0432 \u043f\u043e \u0434\u0430\u0442\u0435 \u0432\u044b\u0434\u0430\u0447\u0438 \u0443\u0434\u043e\u0441\u0442\u043e\u0432\u0435\u0440\u0435\u043d\u0438\u044f (\u041f\u0440\u0438\u043c\u0435\u0447\u0430\u043d\u0438\u0435: \u0447\u0442\u043e\u0431\u044b \u043d\u0435 \u0432\u044b\u0432\u043e\u0434\u0438\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u043e\u0434\u043d\u0438 \u0438 \u0442\u0435 \u0436\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b \u0432\u043e\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435\u0441\u044c \u043c\u0435\u0442\u043e\u0434\u043e\u043c .distinct()","title":"\u041f\u0440\u0430\u043a\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u0437\u0430\u0434\u0430\u043d\u0438\u0435 3"}]}